{"version":3,"sources":["vue-plugin/components/JFlowInstance.js"],"names":["nameNode","bulder","JFlowInstance","inject","props","configs","type","Object","visible","Boolean","jflowId","String","watch","val","oldVal","diffed","keys","length","_jflowInstance","setConfig","news","deletes","vnew","map","e","event","handler","vold","forEach","v","hnew","find","q","push","hold","addEventListener","removeEventListener","render","createElement","created","bindListeners","addToStack","destroyed","removeFromStack","methods","$listeners","func"],"mappings":"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","sourcesContent":["import * as JFlowInstance from '../../core/flow';\nimport diff from 'object-diff';\nexport default function (nameNode) {\n    const bulder =  typeof nameNode === 'string' \n        ? JFlowInstance[nameNode] \n        : nameNode;\n    return {\n        inject: ['addToStack', 'removeFromStack','addNameToRootStack'],\n        props: {\n            configs: {\n                type: Object,\n                default: function () {\n                    return {};\n                },\n            },\n            visible: {\n                type: Boolean,\n                default: true,\n            },\n            jflowId: {\n                type: String,\n            }\n        },\n        watch: {\n            configs(val, oldVal) {\n                // console.log(val, JSON.stringify(val) === JSON.stringify(oldVal), )\n                const diffed = diff(val, oldVal);\n                if(Object.keys(diffed).length === 0){\n                    return;\n                }\n                // \n                // const reflowKeys = Object.keys(diffed).filter(k => {\n                //     const lk = k.toLowerCase();\n                //     return !(lk.endsWith('color') || k.endsWith('style'));\n                // });\n                this._jflowInstance.setConfig(val);\n                // console.log('recalculateUp')\n                // this._jflowInstance.recalculateUp();\n                // console.log(reflowKeys.length, val)\n                // if(reflowKeys.length) {\n                //     this._jflowInstance._belongs.recalculateUp();\n                // } \n                // this._jflowInstance._jflow._render();\n            },\n            '$listeners' (val, oldVal) {\n                let news = [];\n                let deletes = [];\n                const vnew = Object.keys(val).map(e => ({ event: e, handler: val[e] }));\n                const vold = Object.keys(oldVal).map(e => ({ event: e, handler: oldVal[e] }));\n                vnew.forEach((v) => {\n                    const hnew = v.handler;\n                    if(!vold.find((q) => q.handler === hnew)) {\n                        news.push(v);\n                    }\n                });\n                vold.forEach((v) => {\n                    const hold = v.handler;\n                    if(!vnew.find((q) => q.handler === hold)) {\n                        deletes.push(v);\n                    }\n                });\n\n                news.forEach((v) => {\n                    this._jflowInstance.addEventListener(v.event, v.handler);\n                });\n                deletes.forEach((v) => {\n                    this._jflowInstance.removeEventListener(v.event, v.handler);\n                });\n            },\n            visible(val) {\n                this._jflowInstance.visible = val;\n                // this._jflowInstance._belongs.recalculateUp();\n                // this._jflowInstance._jflow._render();\n            }\n        },\n        render: function (createElement) {\n            return null;\n        },\n        created() { \n            this._jflowInstance =  new bulder(this.configs);\n            this._jflowInstance.visible = this.visible;\n            this.bindListeners();\n            this.addToStack(this._jflowInstance, this.jflowId);\n        },\n        // updated() {\n        //     console.log('recalculateUp')\n            \n        // },\n        destroyed() {\n            this.removeFromStack(this._jflowInstance);\n        },\n        methods: {\n            bindListeners() {\n                Object.keys(this.$listeners).map(event => {\n                    const func = this.$listeners[event];\n                    this._jflowInstance.addEventListener(event, func);\n                })\n            }\n        }\n    }\n}"],"file":"JFlowInstance.js"}