{"version":3,"sources":["core/instance/image.js"],"names":["Icon","configs","image","onload","requestAnimationFrame","_jflow","_render","imageBounding","width","imageWidth","height","imageHeight","Object","keys","forEach","k","undefined","_rawConfigs","complete","ctx","save","_isMoving","globalAlpha","Rectangle","prototype","render","call","x","anchor","y","drawImage","restore"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;IACMA,I;;;;;AACF,gBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACjB,8BAAMA,OAAN;AACA,UAAKC,KAAL,GAAaD,OAAO,CAACC,KAArB;;AACA,UAAKA,KAAL,CAAWC,MAAX,GAAoB,YAAM;AACtBC,MAAAA,qBAAqB,CAAC,YAAM;AACxB,cAAKC,MAAL,CAAYC,OAAZ;AACH,OAFoB,CAArB;AAGH,KAJD;;AAKA,UAAKC,aAAL,GAAqB;AACjBC,MAAAA,KAAK,EAAEP,OAAO,CAACQ,UAAR,IAAsBR,OAAO,CAACO,KADpB;AAEjBE,MAAAA,MAAM,EAAET,OAAO,CAACU,WAAR,IAAwBV,OAAO,CAACS;AAFvB,KAArB;AARiB;AAYpB;;;;WAED,mBAAUT,OAAV,EAAmB;AAAA;;AACfW,MAAAA,MAAM,CAACC,IAAP,CAAYZ,OAAZ,EAAqBa,OAArB,CAA6B,UAAAC,CAAC,EAAI;AAC9B,YAAGd,OAAO,CAACc,CAAD,CAAP,KAAeC,SAAf,IAA4Bf,OAAO,CAACc,CAAD,CAAP,KAAe,IAA9C,EAAoD;AAChD,UAAA,MAAI,CAACA,CAAD,CAAJ,GAAUd,OAAO,CAACc,CAAD,CAAjB;AACA,UAAA,MAAI,CAACE,WAAL,CAAiBF,CAAjB,IAAsBd,OAAO,CAACc,CAAD,CAA7B;AACH;AACJ,OALD;;AAMA,UAAGd,OAAO,CAACC,KAAR,IAAiB,CAACD,OAAO,CAACC,KAAR,CAAcgB,QAAnC,EAA6C;AACzC,aAAKhB,KAAL,CAAWC,MAAX,GAAoB,YAAM;AACtBC,UAAAA,qBAAqB,CAAC,YAAM;AACxB,YAAA,MAAI,CAACC,MAAL,CAAYC,OAAZ;AACH,WAFoB,CAArB;AAGH,SAJD;AAKH;;AACD,WAAKC,aAAL,GAAqB;AACjBC,QAAAA,KAAK,EAAEP,OAAO,CAACQ,UAAR,IAAsBR,OAAO,CAACO,KAA9B,IAAuC,KAAKD,aAAL,CAAmBC,KADhD;AAEjBE,QAAAA,MAAM,EAAET,OAAO,CAACU,WAAR,IAAwBV,OAAO,CAACS,MAAhC,IAA0C,KAAKH,aAAL,CAAmBG;AAFpD,OAArB;AAIH;;;WAED,gBAAOS,GAAP,EAAY;AACRA,MAAAA,GAAG,CAACC,IAAJ;;AACA,UAAG,KAAKC,SAAR,EAAkB;AACdF,QAAAA,GAAG,CAACG,WAAJ,GAAkB,GAAlB;AACH;;AACDC,4BAAUC,SAAV,CAAoBC,MAApB,CAA2BC,IAA3B,CAAgC,IAAhC,EAAsCP,GAAtC;;AACA,UAAMQ,CAAC,GAAG,KAAKC,MAAL,CAAY,CAAZ,IAAiB,KAAKpB,KAAL,GAAa,CAAxC;AACA,UAAMqB,CAAC,GAAG,KAAKD,MAAL,CAAY,CAAZ,IAAiB,KAAKlB,MAAL,GAAc,CAAzC;;AACA,UAAG,KAAKR,KAAL,CAAWgB,QAAd,EAAwB;AACpBC,QAAAA,GAAG,CAACW,SAAJ,CAAc,KAAK5B,KAAnB,EAA0ByB,CAA1B,EAA6BE,CAA7B,EAAgC,KAAKtB,aAAL,CAAmBC,KAAnD,EAA0D,KAAKD,aAAL,CAAmBG,MAA7E;AACH;;AACDS,MAAAA,GAAG,CAACY,OAAJ;AACH;;;;EA/CcR,qB;;eAiDJvB,I","sourcesContent":["import Rectangle from './shapes/rectangle';\nimport StackMixin from './stackMixin';\nimport LayoutMixin from './layoutMixin';\nimport { bounding_box } from '../utils/functions';\nimport { DIRECTION } from '../utils/constance';\n\n/**\n * 图片单元 配置\n * @typedef {Rectangle~RectangleConfigs} Icon~IconConfigs\n * @property {number} image   - 图片地址\n * @property {number} imageWidth   - 图片宽度\n * @property {number} imageHeight   - 图片高度\n */\n\n/**\n * 图片单元\n * @description 图片单元可以绘制图片，图片加载后会自动重新绘制\n * @constructor Icon\n * @extends Rectangle\n * @param {Icon~IconConfigs} configs - 配置\n */\nclass Icon extends Rectangle {\n    constructor(configs) {\n        super(configs)\n        this.image = configs.image;\n        this.image.onload = () => {\n            requestAnimationFrame(() => {\n                this._jflow._render();\n            })\n        }\n        this.imageBounding = {\n            width: configs.imageWidth || configs.width,\n            height: configs.imageHeight ||  configs.height,\n        }\n    }\n\n    setConfig(configs) {\n        Object.keys(configs).forEach(k => {\n            if(configs[k] !== undefined && configs[k] !== null) {\n                this[k] = configs[k];\n                this._rawConfigs[k] = configs[k];\n            }\n        });\n        if(configs.image && !configs.image.complete) {\n            this.image.onload = () => {\n                requestAnimationFrame(() => {\n                    this._jflow._render();\n                })\n            }\n        }\n        this.imageBounding = {\n            width: configs.imageWidth || configs.width || this.imageBounding.width,\n            height: configs.imageHeight ||  configs.height || this.imageBounding.height,\n        }\n    }\n\n    render(ctx) {\n        ctx.save();\n        if(this._isMoving){\n            ctx.globalAlpha = 0.5;\n        }\n        Rectangle.prototype.render.call(this, ctx);\n        const x = this.anchor[0] - this.width / 2;\n        const y = this.anchor[1] - this.height / 2;\n        if(this.image.complete) {\n            ctx.drawImage(this.image, x, y, this.imageBounding.width, this.imageBounding.height);\n        }\n        ctx.restore();\n    }\n}\nexport default Icon;"],"file":"image.js"}