{"version":3,"sources":["core/instance/shapes/diamond-vertical-group.js"],"names":["backsqrt3","Math","sqrt","DiamondVerticalGroup","configs","initGroup","ctx","renderGroup","save","_isMoving","globalAlpha","beginPath","anchor","x","y","hw","width","hh","height","yy","top","bottom","topmiddle","bottommiddle","xleft","xright","moveTo","lineTo","closePath","fillStyle","backgroundColor","fill","borderWidth","lineWidth","strokeStyle","borderColor","stroke","restore","_cachePoints","console","log","point","condition","result","isHitGroup","Diamond","prototype","isHit","call","Object","assign","GroupMixin","_getBoundingGroupRect","points","_stack","getBoundingRectPoints","bbox","anchors","getAnchorRectPoints","anchorsbbox","padding","minWidth","left","right","definedWidth","w","h","max","definedHeight"],"mappings":"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","sourcesContent":["import Diamond from './diamond';\nimport GroupMixin from '../groupMixin';\nimport { bounding_box } from '../../utils/functions';\nconst backsqrt3 = 1/Math.sqrt(3)\n\n/**\n * 垂直钻石形组单元\n * @description 组单元包含绘图栈，能够包裹内部单元，具有独立的坐标系，目前为中心对齐的坐标系\n * @constructor DiamondVerticalGroup\n * @param {DiamondGroup~DiamondGroupConfigs} configs - 配置\n * @extends Diamond\n * @mixes GroupMixin\n */\nclass DiamondVerticalGroup extends Diamond {\n    constructor(configs) {\n        super(configs)\n        this.initGroup(configs);\n    }\n\n\n    render(ctx) {\n        this.renderGroup(ctx, () => {\n            ctx.save();\n            if(this._isMoving){\n                ctx.globalAlpha = 0.5;\n            }\n            ctx.beginPath();\n            const [x, y] = this.anchor;\n            const hw = this.width/2;\n            const hh = this.height/2;\n            const yy = hw / 1.732\n\n            const top = y - hh;\n            const bottom = y + hh;\n            const topmiddle = y - hh + yy;\n            const bottommiddle = y + hh - yy;\n            const xleft = x - hw;\n            const xright = x + hw;\n\n            ctx.moveTo(x, top);\n            ctx.lineTo(xright, topmiddle);\n            ctx.lineTo(xright, bottommiddle);\n            ctx.lineTo(x, bottom);\n            ctx.lineTo(xleft, bottommiddle);\n            ctx.lineTo(xleft, topmiddle);\n            ctx.closePath();\n            ctx.fillStyle = this.backgroundColor;\n            ctx.fill();     \n            if(this.borderWidth) {\n                ctx.lineWidth = this.borderWidth;\n                ctx.strokeStyle = this.borderColor;\n                ctx.stroke();\n            }\n\n            ctx.restore();\n            this._cachePoints = [\n                [x, top],\n                [xright, topmiddle],\n                [xright, bottommiddle],\n                [x, bottom],\n                [xleft, bottommiddle],\n                [xleft, topmiddle]\n            ];\n            console.log(this._cachePoints)\n        })\n    }\n\n    isHit(point, condition) {\n        const result = this.isHitGroup(point, condition);\n        if(result) {\n            return result;\n        }\n        return Diamond.prototype.isHit.call(this, point);\n    }\n}\nObject.assign(DiamondVerticalGroup.prototype, GroupMixin);\nObject.assign(DiamondVerticalGroup.prototype, {\n    _getBoundingGroupRect() {\n        const points = this._stack.getBoundingRectPoints();\n        const bbox = bounding_box(points);\n        const anchors = this._stack.getAnchorRectPoints();\n        const anchorsbbox = bounding_box(anchors);\n        const padding = this.padding;\n        const minWidth = this.minWidth - padding.left - padding.right;\n        const definedWidth = this.definedWidth - padding.left - padding.right;\n        const w = bbox.width + padding.left + padding.right;\n        const h = anchorsbbox.height + w / 1.732 + padding.top + padding.bottom;\n        \n        this.width = minWidth ? Math.max(minWidth, w) : definedWidth || w;\n        this.height = this.definedHeight || h;\n    },\n})\nexport default DiamondVerticalGroup;"],"file":"diamond-vertical-group.js"}