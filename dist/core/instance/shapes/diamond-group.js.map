{"version":3,"sources":["core/instance/shapes/diamond-group.js"],"names":["backsqrt3","Math","sqrt","DiamondGroup","configs","initGroup","ctx","renderGroup","Diamond","prototype","render","call","point","condition","result","isHitGroup","isHit","Object","assign","GroupMixin","_getBoundingGroupRect","points","_stack","getBoundingRectPoints","bbox","padding","minWidth","left","right","definedWidth","w","width","height","h","top","bottom","max","definedHeight","setConfig","keys","forEach","k","undefined","_rawConfigs","paddingTop","paddingRight","paddingBottom","paddingLeft","_cacheSide"],"mappings":"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","sourcesContent":["import Diamond from './diamond';\nimport GroupMixin from '../groupMixin';\nimport { bounding_box } from '../../utils/functions';\nconst backsqrt3 = 1/Math.sqrt(3)\n\n /**\n * 钻石形组单元配置\n * @typedef {GroupMixin~LayoutGroupConfigs | Diamond~DiamondConfigs } DiamondGroup~DiamondGroupConfigs\n */\n/**\n * 钻石形组单元\n * @description 组单元包含绘图栈，能够包裹内部单元，具有独立的坐标系，目前为中心对齐的坐标系\n * @constructor DiamondGroup\n * @param {DiamondGroup~DiamondGroupConfigs} configs - 配置\n * @extends Diamond\n * @mixes GroupMixin\n */\nclass DiamondGroup extends Diamond {\n    constructor(configs) {\n        super(configs)\n        this.initGroup(configs);\n    }\n\n\n    render(ctx) {\n        this.renderGroup(ctx, () => {\n\n            Diamond.prototype.render.call(this, ctx);\n        // ctx.save();\n        // ctx.fillStyle = 'rgba(255,0,0,0.3)';\n        // ctx.fillRect(this.anchor[0] - this.width/2, this.anchor[1] - this.height/2, this.width, this.height)\n        // ctx.restore();\n        })\n    }\n\n    isHit(point, condition) {\n        const result = this.isHitGroup(point, condition);\n        if(result) {\n            return result;\n        }\n        return Diamond.prototype.isHit.call(this, point);\n    }\n}\nObject.assign(DiamondGroup.prototype, GroupMixin);\nObject.assign(DiamondGroup.prototype, {\n    _getBoundingGroupRect() {\n        const points = this._stack.getBoundingRectPoints();\n        const bbox = bounding_box(points);\n        const padding = this.padding;\n        const minWidth = this.minWidth - padding.left - padding.right;\n        const definedWidth = this.definedWidth - padding.left - padding.right;\n        const w = bbox.width + padding.left + padding.right + bbox.height * backsqrt3 / 2;\n        const h = bbox.height + padding.top + padding.bottom;\n        this.width = minWidth ? Math.max(minWidth, w) : definedWidth || w;\n        this.height = this.definedHeight || h;\n        // this.offsetY = bbox.y;\n        // this.offsetX = bbox.x;\n    },\n    setConfig(configs) {\n        Object.keys(configs).forEach(k => {\n            if(configs[k] !== undefined && configs[k] !== null) {\n                this[k] = configs[k];\n                this._rawConfigs[k] = configs[k];\n            }\n        });\n        this.padding = {\n            top: configs.paddingTop || configs.padding || 0,\n            right: configs.paddingRight || configs.padding || 0,\n            bottom: configs.paddingBottom || configs.padding || 0,\n            left: configs.paddingLeft || configs.padding || 0,\n        };\n        this._cacheSide();\n    }\n})\nexport default DiamondGroup;"],"file":"diamond-group.js"}