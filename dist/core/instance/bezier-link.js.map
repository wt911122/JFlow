{"version":3,"sources":["core/instance/bezier-link.js"],"names":["PIINRATIO","Math","PI","BezierLink","configs","approximate","APPROXIMATE","minSpanX","minSpanY","lineDash","doubleLink","fontFamily","fontSize","content","isSelf","dmsfrom","from","getIntersectionsInFourDimension","dmsto","to","points","fromDir","DIRECTION","SELF","BOTTOM","_cachePoints","console","log","_cacheAngle","undefined","toDir","meta","fromP","toP","ctx","_calculateAnchorPoints","angle","getBezierAngle","apply","fillStyle","strokeStyle","backgroundColor","beginAngle","beginPath","translate","rotate","moveTo","lineTo","fill","bezierCurveTo","slice","save","setLineDash","stroke","restore","x","y","font","textAlign","fillText","point","dist","startX","startY","endX","endY","BaseLink"],"mappings":"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","sourcesContent":["import BaseLink from './base-link';\nimport { bezierPoints, distToBezierSegmentSquared, getBezierAngle, minIntersectionBetweenNodes } from '../utils/functions';\nimport { APPROXIMATE, DIRECTION } from '../utils/constance';\nimport { dist2, bezierPoint } from '../utils/functions';\nconst PIINRATIO = Math.PI / 180\n/**\n * @typedef {BaseLink~Configs} BezierLink~Configs\n * @property {Number} approximate   - 点击响应范围\n * @property {Number} minSpanX      - 起点终点在 x 方向最小的跨度\n * @property {Number} minSpanY      - 起点终点在 y 方向最小的跨度\n * @property {number[]} lineDash    - 虚线数组\n * @property {Boolean} doubleLink   - 双向箭头\n * @property {String} fontFamily    - 连线上的文字字体\n * @property {Number} fontSize      - 连线上的文字大小\n * @property {String} content       - 连线上的文字\n * @property {String} isSelf        - 是否为自连接\n */\n/**\n * 贝塞尔曲线\n * @constructor BezierLink\n * @extends BaseLink\n * @param {BezierLink~Configs} configs - 配置\n */\nclass BezierLink extends BaseLink {\n     /**\n     * 创建贝塞尔曲线.\n     * @param {BezierLink~Configs} configs - 配置\n     **/\n    constructor(configs) {\n        super(configs);\n        this.approximate   = configs.approximate || APPROXIMATE;\n        this.minSpanX      = configs.minSpanX || 0;\n        this.minSpanY      = configs.minSpanY || 0;\n        this.lineDash      = configs.lineDash;\n        this.doubleLink    = configs.doubleLink;\n        this.fontFamily    = configs.fontFamily = '-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Helvetica,Tahoma,Arial,Noto Sans,PingFang SC,Microsoft YaHei,Hiragino Sans GB,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji'\n        this.fontSize      = configs.fontSize || '12px';\n        this.content       = configs.content || '';\n        this.isSelf        = !!configs.isSelf\n    }\n    \n    // getColor() {\n    //     if(this._isTargeting) {\n    //         return this.hoverStyle;\n    //     }\n    //     return this.defaultStyle;\n    // }\n    \n    // _calculateAnchorPoints() {\n    //     let start;\n    //     let end;\n    //     if(this.fromDir !== undefined) {\n    //         start = {\n    //             dir: this.fromDir,\n    //             p: this.from.getIntersectionsInFourDimension()[this.fromDir],\n    //         }\n    //     } else {\n    //         start = this.from.calculateIntersectionInFourDimension(this.to.getCenter(), 'from');\n    //     }\n    //     if(this.toDir !== undefined) {\n    //         end = {\n    //             dir: this.toDir,\n    //             p: this.to.getIntersectionsInFourDimension()[this.toDir],\n    //         }\n    //     } else {\n    //         end = this.to.calculateIntersectionInFourDimension(this.from.getCenter(), 'to');\n    //     }\n        \n        \n    //     // const start = this.from.calculateIntersectionInFourDimension(this.to.getCenter(), 'from');\n    //     // const end = this.to.calculateIntersectionInFourDimension(this.from.getCenter(), 'to');\n    //     const p1 = start.p;\n    //     const p2 = end.p;\n    //     const points = bezierPoints(p1, p2, start.dir, end.dir, this.anticlock);\n\n    //     this._cachePoints = [...p1, ...points]\n    // }\n\n    _calculateAnchorPoints() {\n\n        const dmsfrom = this.from.getIntersectionsInFourDimension();\n        const dmsto = this.to.getIntersectionsInFourDimension();\n        if(this.isSelf) {\n            const points = bezierPoints(\n                dmsfrom[this.fromDir],\n                dmsto[DIRECTION.SELF],\n                this.fromDir,\n                DIRECTION.BOTTOM, \n                this.minSpanX, \n                this.minSpanY);\n\n            this._cachePoints = [...dmsfrom[this.fromDir], ...points] \n            console.log(points)\n            this._cacheAngle = [this.fromDir, DIRECTION.BOTTOM]\n        } else if(this.fromDir !== undefined && this.toDir !== undefined) {\n            const points = bezierPoints(\n                dmsfrom[this.fromDir],\n                dmsto[this.toDir],\n                this.fromDir,\n                this.toDir, this.minSpanX , this.minSpanY);\n            this._cachePoints = [...dmsfrom[this.fromDir], ...points] \n            this._cacheAngle = [this.fromDir, this.toDir]\n        } else {\n            const meta = minIntersectionBetweenNodes(dmsfrom, dmsto);\n            const points = bezierPoints(\n                meta.fromP,\n                meta.toP,\n                meta.fromDir,\n                meta.toDir);\n\n            this._cachePoints = [...meta.fromP, ...points];\n            this._cacheAngle = [meta.fromDir, meta.toDir];\n        }\n    }\n\n    render(ctx) {\n        this._calculateAnchorPoints();\n        const points = this._cachePoints;\n        const angle = getBezierAngle.apply(null, [1, ...points])\n        ctx.fillStyle = ctx.strokeStyle = this.backgroundColor;\n        if(this.doubleLink) {\n            const beginAngle = ((this._cacheAngle[0] + 2) % 4) * 90 * PIINRATIO;\n            ctx.beginPath();\n            ctx.translate(points[0], points[1]);\n            ctx.rotate(beginAngle);\n            ctx.moveTo(5, 0);\n            ctx.lineTo(0, -4);\n            ctx.lineTo(0, 4);\n            ctx.lineTo(5, 0);\n            ctx.fill();\n            ctx.rotate(-beginAngle);\n            ctx.translate(-points[0], -points[1]);\n        }\n        ctx.beginPath();\n        ctx.moveTo(points[0], points[1])\n        ctx.bezierCurveTo(...points.slice(2));\n        if(this.lineDash) {\n            ctx.save();\n            ctx.setLineDash(this.lineDash);\n        }\n        ctx.stroke();\n        if(this.lineDash) {\n            ctx.restore();\n        }\n        ctx.beginPath();\n        ctx.translate(points[6], points[7]);\n        ctx.rotate(angle);\n        ctx.moveTo(5, 0);\n        ctx.lineTo(0, -4);\n        ctx.lineTo(0, 4);\n        ctx.lineTo(5, 0);\n        ctx.fill();\n        ctx.rotate(-angle);\n        ctx.translate(-points[6], -points[7]);\n        if(this.content) {\n            ctx.beginPath();\n            const [x, y, angle] = bezierPoint(0.5, points);\n            ctx.translate(x, y);\n            ctx.rotate(angle);\n            ctx.font = `${this.fontSize} ${this.fontFamily}`;\n            ctx.textAlign = 'center';\n            ctx.fillText(this.content, 0, 10);\n            ctx.rotate(-angle);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    isHit(point) {\n        if(!this._cachePoints) return false;\n        const points = this._cachePoints;\n        const dist = distToBezierSegmentSquared(point, points)\n        return dist < this.approximate;\n    }\n\n    getBoundingRect() {\n        const { startX, startY, endX, endY } = this._calculateAnchorPoints(); \n        return [[startX, startY], [endX, endY]]\n    }\n}\n\nexport default BezierLink;"],"file":"bezier-link.js"}