{"version":3,"sources":["core/instance/layoutMixin.js"],"names":["LayoutMixin","_layout","initLayout","configs","layout","recalculateUp","dirty","getBoundingDimension","wold","width","hold","height","resetChildrenPosition","_getBoundingGroupRect","reflow","wnow","hnow","_belongs","recalculate","staticCheck","instance"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,WAAW,GAAG;AAChBC,EAAAA,OAAO,EAAE,IADO;AAEhB;;AACA;AACJ;AACA;AACA;AACIC,EAAAA,UAPgB,sBAOLC,OAPK,EAOI;AAChB,SAAKF,OAAL,GAAeE,OAAO,CAACC,MAAvB;AACH,GATe;;AAUhB;AACJ;AACA;AACIC,EAAAA,aAbgB,2BAaA;AACZ,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAG,KAAKC,oBAAR,EAA8B;AAC1B,kCAAsC,KAAKA,oBAAL,EAAtC;AAAA,UAAeC,IAAf,yBAAQC,KAAR;AAAA,UAA6BC,IAA7B,yBAAqBC,MAArB;;AACA,UAAG,KAAKC,qBAAR,EAA+B;AAC3B,aAAKA,qBAAL;AACH;;AACD,UAAG,KAAKC,qBAAR,EAA8B;AAC1B,aAAKA,qBAAL;AACH;;AACD,WAAKC,MAAL;;AACA,UAAG,KAAKD,qBAAR,EAA8B;AAC1B,aAAKA,qBAAL;AACH;;AACD,mCAAsC,KAAKN,oBAAL,EAAtC;AAAA,UAAeQ,IAAf,0BAAQN,KAAR;AAAA,UAA6BO,IAA7B,0BAAqBL,MAArB;;AACAL,MAAAA,KAAK,GAAIE,IAAI,KAAKO,IAAT,IAAiBL,IAAI,KAAKM,IAAnC;AACH,KAdD,MAcO;AACH,WAAKF,MAAL;AACH;;AACD,QAAG,KAAKG,QAAL,IAAiBX,KAApB,EAA2B;AACvB,WAAKW,QAAL,CAAcZ,aAAd;AACH;AACJ,GAnCe;;AAoChB;AACJ;AACA;AACIa,EAAAA,WAvCgB,yBAuCF;AACV;AACA,SAAKJ,MAAL;;AACA,QAAG,KAAKD,qBAAR,EAA8B;AAC1B,WAAKA,qBAAL;AACH,KALS,CAMV;AACA;AACA;AACA;;AACH,GAjDe;;AAkDhB;AACJ;AACA;AACA;AACA;AACIM,EAAAA,WAvDgB,uBAuDJC,QAvDI,EAuDM;AAClB,QAAG,KAAKnB,OAAR,EAAiB;AACb,aAAO,KAAKA,OAAL,CAAakB,WAAb,CAAyBC,QAAzB,EAAmC,IAAnC,CAAP;AACH;;AACD,WAAO,KAAP;AACH,GA5De;;AA6DhB;AACJ;AACA;AACIN,EAAAA,MAhEgB,oBAgEP;AACL,QAAG,KAAKb,OAAR,EAAiB;AACb,WAAKA,OAAL,CAAaa,MAAb,CAAoB,IAApB;AACH;AACJ;AApEe,CAApB;eAuEed,W","sourcesContent":["/**\n * Layout mixin 配置\n * @typedef {Object} LayoutMixin~LayoutConfigs\n * @property {Layout} layout             - 布局对象 \n */\n/**\n * 布局 mixin 用于注册和方便控制布局\n *\n * @mixin\n */\nconst LayoutMixin = {\n    _layout: null,\n    // _reflowed: false,\n    /**\n     * 初始化布局\n     * @param {LayoutMixin~LayoutConfigs} configs - 配置\n     */\n    initLayout(configs) {\n        this._layout = configs.layout;\n    },\n    /**\n     * 从当前层出发，向上层递归重排\n     */\n    recalculateUp() {\n        let dirty = true;\n        if(this.getBoundingDimension) {\n            const { width: wold, height: hold } = this.getBoundingDimension();\n            if(this.resetChildrenPosition) {\n                this.resetChildrenPosition();\n            }\n            if(this._getBoundingGroupRect){\n                this._getBoundingGroupRect();\n            }\n            this.reflow();\n            if(this._getBoundingGroupRect){\n                this._getBoundingGroupRect();\n            }\n            const { width: wnow, height: hnow } = this.getBoundingDimension();\n            dirty = (wold !== wnow || hold !== hnow)\n        } else {\n            this.reflow();\n        }\n        if(this._belongs && dirty) {\n            this._belongs.recalculateUp();\n        }\n    },\n    /**\n     * 重新计算布局，相当于浏览器里面重排，并重算当前布局下的最小外接矩形\n     */\n    recalculate() {\n        // this._reflowed = true;\n        this.reflow();\n        if(this._getBoundingGroupRect){\n            this._getBoundingGroupRect();\n        }\n        // 这个地方到底是手动还是自动？自动时机再试试看好了\n        // if(this._belongs) {\n        //     this._belongs.recalculate();\n        // }\n    },\n    /**\n     * 布局静态检查\n     * @param {Instance} instance - 检查单元\n     * @return {Boolean} - 检查结果 \n     */\n    staticCheck(instance) {\n        if(this._layout) {\n            return this._layout.staticCheck(instance, this);\n        }\n        return false;\n    },\n    /**\n     * 重新计算布局，相当于浏览器里面重排\n     */\n    reflow() {\n        if(this._layout) {\n            this._layout.reflow(this);\n        }\n    },\n}\n\nexport default LayoutMixin;"],"file":"layoutMixin.js"}