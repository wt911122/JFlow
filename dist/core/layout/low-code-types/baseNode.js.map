{"version":3,"sources":["core/layout/low-code-types/baseNode.js"],"names":["BaseNode","source","id","type","isDraggable","getJflowInstance","undefined","level","sequence","isLocked","isFree","parent","idx","parentIterateType","_getAstNode","callback","spanX","spanY","nodes","traverse","n","push","splice","Root","isroot","body","map","mapFunc","bind","playgrounditerator","playground","s","forEach","b","reflowPreCalculate","sx","sy","Math","max","preCallback","node","last","from","to","part","fromDir","DIRECTION","BOTTOM","toDir","TOP","meta","makeLink","IfStatement","consequent","alternate","c_spanX","c_spanY","a_spanX","a_spanY","c","nextSequeence","a","Endpoint","lastc","lasta","RIGHT","makeAST","linkMeta","unshift","SwitchStatement","cases","length","lastCase","cc","s_spanX","s_spanY","ca","minSpanX","ForEachStatement","WhileStatement","anticlock","isSelf","minSpanY","SwitchCase","TYPE_MAPPING","other","p","makeEndpoint","Constructor"],"mappings":"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","sourcesContent":["\n// import EventEmitter from '../../utils/EventEmitter';\nimport { DIRECTION } from '../../utils/constance';\nclass BaseNode {\n    constructor(source) {\n        this.source = source;\n        this.id = source.id;\n        this.type = source.type;\n        this.isDraggable = true;\n        this.getJflowInstance = undefined;\n        this.level = undefined;\n        this.sequence = undefined;\n        this.isLocked = false;\n        this.isFree = false;\n        this.parent = undefined;\n        this.idx = undefined;\n        this.parentIterateType = undefined;\n        source._getAstNode = () => this;\n    }\n\n    reflowPreCalculate(level = 0, sequence = 0, callback) {\n        this.level = level;\n        this.sequence = sequence;\n        this.spanX = 1;\n        this.spanY = 1;\n        if(callback) {\n            callback(level, sequence, this);\n        }\n        return {\n            spanX: this.spanX, \n            spanY: this.spanY, \n            level, sequence,\n        }\n    }\n\n    makeLink(callback) {\n        return this;\n    }\n\n    makeEndpoint() { }\n\n    traverse(callback) {\n        callback(this);\n    }\n\n    getNodes() {\n        const nodes = [];\n        this.traverse(n => {\n            if(n.getJflowInstance)\n                nodes.push(n.getJflowInstance());\n        })\n        return nodes;\n    }\n\n    linkSource(source) {\n        this.parent.source[this.parentIterateType].splice(this.idx + 1, 0, source);\n    }\n\n    remove() {\n        this.parent.source[this.parentIterateType].splice(this.idx, 1);\n    }\n}\n\nclass Root extends BaseNode {\n    constructor(source) {\n        super(source);\n        this.isroot = true;\n        this.body = (source.body || []).map(mapFunc('body').bind(this));\n        const playgrounditerator = mapFunc('playground').bind(this)\n        this.playground = (source.playground || []).map((s, idx) => {\n            const n = playgrounditerator(s, idx);\n            n.isFree = true;\n            return n;\n        });\n    }\n\n    reflowBodyPreCalculate(level = 0, sequence = 0, callback) {\n        let spanX = 1;\n        let spanY = 1;\n        this.level = level;\n        this.sequence = sequence;\n        if(callback) {\n            callback(level, sequence, this);\n        }\n        this.body.forEach((b) => {\n            const { spanX: sx, spanY: sy } = b.reflowPreCalculate(level + 1, sequence, callback);\n            spanX = Math.max(sx, spanX);\n            spanY += sy;\n            level += sy;\n        });\n\n        this.spanX = spanX;\n        this.spanY = spanY;\n        return {\n            spanX, spanY, level, sequence\n        }\n    }\n\n    reflowPlaygroundPreCalculate(preCallback, callback) {\n        this.playground.forEach(node => {\n            preCallback(node)\n            node.reflowPreCalculate(0, 0, callback)\n        })\n    }\n\n\n    makeLink(callback) {\n        let last;\n        this.body.forEach(b => {\n            if(!last) {\n                last = b;\n                return;\n            }\n            callback({\n                from: last.id,\n                to: b.id,\n                part: 'body',\n                fromDir: DIRECTION.BOTTOM,\n                toDir: DIRECTION.TOP,\n                meta: {\n                    from: last,\n                    to: b\n                }\n            })\n            \n            b = b.makeLink(callback);\n            last = b;\n        });\n\n        this.playground.forEach(n => {\n            n.makeLink(callback);\n        });\n        return this;\n    }\n\n    traverse(callback) {\n        this.body.forEach(n => {\n            n.traverse(callback);\n        });\n\n        this.playground.forEach(n => {\n            n.traverse(callback);\n        })\n    }\n}\n\nclass IfStatement extends BaseNode {\n    constructor(source) {\n        super(source);\n        this.consequent = (source.consequent || []).map(mapFunc('consequent').bind(this));\n        this.alternate = (source.alternate || []).map(mapFunc('alternate').bind(this));\n        this.isLocked = true;\n    }\n    \n    reflowPreCalculate(level = 0, sequence = 0, callback) {\n        let spanX = 1;\n        let spanY = 1;\n        this.level = level;\n        this.sequence = sequence;\n        if(callback) {\n            callback(level, sequence, this);\n        }\n        let c_spanX = 1;\n        let c_spanY = 0;\n        let a_spanX = 0;\n        let a_spanY = 0;\n        this.consequent.forEach((c, idx) => {   \n            const { spanX: sx, spanY: sy } = c.reflowPreCalculate(level + 1, sequence, callback);\n            c_spanX = Math.max(c_spanX, sx);\n            c_spanY += sy;\n            level += sy;\n        });\n        const nextSequeence = sequence + c_spanX;\n        level = this.level;\n        this.alternate.forEach((a, idx) => {\n            const { spanX: sx, spanY: sy } = a.reflowPreCalculate(level + 1, nextSequeence, callback);\n            a_spanX = Math.max(a_spanX, sx);\n            a_spanY += sy;\n            level += sy;\n        });\n        spanX = Math.max(1, c_spanX + a_spanX);\n        spanY += Math.max(c_spanY, a_spanY);\n        level = this.level + spanY - 1;\n        const { spanY: sy } = this.Endpoint.reflowPreCalculate(level + 1, sequence, callback);\n        spanY += sy;\n        this.spanX = spanX;\n        this.spanY = spanY;\n        return {\n            spanX, spanY, level, sequence\n        }\n    }\n\n    makeLink(callback) {\n        let lastc = this;\n        this.consequent.forEach(c => {\n            callback({\n                from: lastc.id,\n                to: c.id,\n                part: 'consequent',\n                fromDir: DIRECTION.BOTTOM,\n                toDir: DIRECTION.TOP,\n                meta: {\n                    from: lastc,\n                    to: c\n                }\n            });\n\n            c = c.makeLink(callback)\n            lastc = c;\n        })\n\n        callback({\n            from: lastc.id,\n            to: this.Endpoint.id,\n            fromDir: DIRECTION.BOTTOM,\n            toDir: DIRECTION.TOP,\n            part: 'consequent',\n            meta: {\n                from: lastc,\n                to: this.Endpoint\n            }\n        });\n\n        let lasta = this;\n        this.alternate.forEach(a => {\n            callback({\n                from: lasta.id,\n                to: a.id,\n                fromDir: lasta === this ? DIRECTION.RIGHT : DIRECTION.BOTTOM,\n                toDir: DIRECTION.TOP,\n                part: 'alternate',\n                meta: {\n                    from: lasta,\n                    to: a\n                }\n            })\n            a = a.makeLink(callback)\n            lasta = a;\n        });\n        callback({\n            from: lasta.id,\n            to: this.Endpoint.id,\n            fromDir: lasta === this ? DIRECTION.RIGHT : DIRECTION.BOTTOM,\n            toDir: DIRECTION.RIGHT,\n            part: 'alternate',\n            meta: {\n                from: lasta,\n                to: this.Endpoint\n            }\n        });\n\n        return this.Endpoint;\n    }\n\n    makeEndpoint() {\n        this.Endpoint = makeAST({\n            type: 'endpoint',\n            id: `${this.id}-endpoint`,\n        });\n        this.Endpoint.parent = this.parent;\n        this.Endpoint.idx = this.idx;\n        this.Endpoint.parentIterateType = this.parentIterateType;     \n    }\n\n    traverse(callback) {\n        callback(this);\n        this.consequent.forEach(n => {\n            n.traverse(callback);\n        });\n        this.alternate.forEach(n => {\n            n.traverse(callback);\n        });\n        callback(this.Endpoint);\n    }\n\n    linkSource(source, linkMeta) {\n        this.source[linkMeta.part].unshift(source);\n    }\n}\n\nclass SwitchStatement extends BaseNode {\n    constructor(source) {\n        super(source);\n        this.cases = (source.cases || []).map(mapFunc('case').bind(this))\n        if(this.cases.length) {\n            this.cases[this.cases.length - 1].lastCase = true;\n        }\n        this.isLocked = true;\n    }\n\n    reflowPreCalculate(level = 0, sequence = 0, callback) {\n        let spanX = 1;\n        let spanY = 1;\n        this.level = level;\n        this.sequence = sequence;\n        if(callback) {\n            callback(level, sequence, this);\n        }\n\n        let c_spanX = 1;\n        let c_spanY = 0;\n        if(this.cases.length) {\n            const consequent = this.cases[this.cases.length - 1].consequent;\n            level = this.level;\n            consequent.forEach(cc => {\n                const { spanX: sx, spanY: sy } = cc.reflowPreCalculate(level + 1, sequence, callback);\n                c_spanX = Math.max(c_spanX, sx);\n                c_spanY += sy;\n                level += sy;\n            });\n        }\n        \n        \n        let s_spanX = c_spanX;\n        let s_spanY = 0;\n        this.cases.forEach((c, idx) => {\n            const nextSequeence = sequence + s_spanX;\n            let a_spanX = 0;\n            let a_spanY = 0;\n            level = this.level;\n            c.alternate.forEach(ca => {\n                const { spanX: sx, spanY: sy } = ca.reflowPreCalculate(level + 1, nextSequeence, callback);\n                a_spanX = Math.max(a_spanX, sx);\n                a_spanY += sy;\n                level += sy;\n            });\n            s_spanX += a_spanX;\n            s_spanY = Math.max(s_spanY, a_spanY);\n        });\n       \n        \n        spanX = Math.max(1, s_spanX);\n        spanY = Math.max(c_spanY, s_spanY);\n        level = this.level + spanY;\n        const { spanY: sy } = this.Endpoint.reflowPreCalculate(level + 1, sequence, callback);\n        spanY += sy;\n        spanY += 1 // 要算上自己\n        this.spanX = spanX;\n        this.spanY = spanY;\n        return {\n            spanX, spanY, level, sequence\n        }       \n    }\n\n    makeLink(callback) {\n        let lastc = this;\n        if(this.cases.length) {\n            const consequent = this.cases[this.cases.length - 1].consequent;\n            consequent.forEach((c, idx) => {\n                callback({\n                    from: lastc.id,\n                    to: c.id,\n                    fromDir: DIRECTION.BOTTOM,\n                    toDir: DIRECTION.TOP,\n                    part: 'consequent',\n                    meta: {\n                        from: lastc,\n                        to: c\n                    }\n                });\n                lastc = c.makeLink(callback)\n            });\n        }\n        callback({\n            from: lastc.id,\n            to: this.Endpoint.id,\n            fromDir: DIRECTION.BOTTOM,\n            toDir: DIRECTION.TOP,\n            part: 'alternate',\n            meta: {\n                from: lastc,\n                to: this.Endpoint\n            }\n        });\n\n        this.cases.forEach((c, idx) => {\n            let lasta = c;\n            c.alternate.forEach(a => {\n                callback({\n                    from: lasta.id,\n                    to: a.id,\n                    fromDir: lasta === c ? DIRECTION.RIGHT : DIRECTION.BOTTOM,\n                    toDir: DIRECTION.TOP,\n                    part: 'alternate',\n                    meta: {\n                        from: lasta,\n                        to: a\n                    }\n                });\n                lasta = a.makeLink(callback)\n            })\n            \n            callback({\n                from: lasta.id,\n                to: this.Endpoint.id,\n                fromDir: lasta === c ? DIRECTION.RIGHT : DIRECTION.BOTTOM,\n                toDir: DIRECTION.RIGHT,\n                part: 'alternate',\n                minSpanX: 32 * (idx + 1),\n                meta: {\n                    from: lasta,\n                    to: this.Endpoint\n                }\n            });\n        });\n\n        return this.Endpoint;\n    }\n\n    makeEndpoint() {\n        this.Endpoint = makeAST({\n            type: 'endpoint',\n            id: `${this.id}-endpoint`,\n        });\n        this.Endpoint.parent = this.parent;\n        this.Endpoint.parentIterateType = this.parentIterateType;     \n        this.Endpoint.idx = this.idx;\n    }\n\n    traverse(callback) {\n        callback(this);\n        this.cases.forEach(n => {\n            n.traverse(callback);\n        });\n        callback(this.Endpoint);\n    }\n}\n\nclass ForEachStatement extends BaseNode {\n    \n}\n\nclass WhileStatement extends BaseNode {\n    constructor(source) {\n        super(source);\n        this.body = (source.body || []).map(mapFunc('body').bind(this));\n        this.isLocked = true\n    }\n\n    reflowPreCalculate(level = 0, sequence = 0, callback) {\n        let spanX = 1;\n        let spanY = 1;\n        this.level = level;\n        this.sequence = sequence;\n        if(callback) {\n            callback(level, sequence, this);\n        }\n        const nextSequeence = sequence + 1;\n        // level--;\n        this.body.forEach((b) => {\n            const { spanX: sx, spanY: sy } = b.reflowPreCalculate(level + 1, nextSequeence, callback);\n            spanX = Math.max(sx, spanX);\n            spanY += sy;\n            level += sy;\n        });\n\n        this.spanX = spanX + 1;\n        this.spanY = spanY;\n        return {\n            spanX, spanY, level, sequence\n        }\n    }\n\n    makeLink(callback) {\n        let last = this;\n        // const lastIdx = this.body.length - 1;\n        this.body.forEach((b, idx) => {\n            callback({\n                from: last.id,\n                to: b.id,\n                part: 'body',\n                fromDir: last === this ? DIRECTION.RIGHT: DIRECTION.BOTTOM,\n                toDir: DIRECTION.TOP,\n                meta: {\n                    from: last,\n                    to: b\n                }\n            })\n            \n            b = b.makeLink(callback);\n            last = b;\n        });\n        callback({\n            from: last.id,\n            to: this.id,\n            part: 'body',\n            fromDir: last === this ? DIRECTION.RIGHT : DIRECTION.BOTTOM,\n            anticlock: last === this,\n            toDir: DIRECTION.BOTTOM,\n            isSelf: true,\n            minSpanX: 20,\n            minSpanY: 20,\n            meta: {\n                from: last,\n                to: this\n            }\n        });\n        return this;\n    }\n\n    traverse(callback) {\n        callback(this);\n        this.body.forEach(n => {\n            n.traverse(callback);\n        });\n    }\n\n    linkSource(source, linkMeta) {\n        this.source[linkMeta.part].unshift(source);\n    }\n}\n\nclass SwitchCase extends BaseNode {\n    constructor(source) {\n        super(source);\n        this.consequent = (source.consequent || []).map(mapFunc('consequent').bind(this));\n        this.alternate = (source.alternate || []).map(mapFunc('alternate').bind(this));\n        this.lastCase = false;\n    }\n\n    reflowPreCalculate(level = 0, sequence = 0, callback) {\n        let spanX = 1;\n        let spanY = 1;\n        this.level = level;\n        this.sequence = sequence;\n        if(callback) {\n            callback(level, sequence, this);\n        }\n        \n        let c_spanX = 0;\n        let c_spanY = 0;\n        let a_spanX = 0;\n        let a_spanY = 0;\n        if(this.lastCase) {\n            this.consequent.forEach((c, idx) => {\n                const { spanX: sx, spanY: sy } = c.reflowPreCalculate(level + 1, sequence, callback);\n                c_spanX = Math.max(c_spanX, sx);\n                c_spanY += sy;\n                level += sy;\n            });\n        }\n        \n        const nextSequeence = sequence + Math.max(c_spanX, 1);\n        level = this.level;\n        this.alternate.forEach((a, idx) => {\n            const { spanX: sx, spanY: sy } = a.reflowPreCalculate(level + 1, nextSequeence, callback);\n            a_spanX = Math.max(a_spanX, sx);\n            a_spanY += sy;\n            level += sy;\n        });\n        spanX = Math.max(1, c_spanX + a_spanX);\n        spanY += Math.max(c_spanY, a_spanY);\n\n        this.spanX = spanX;\n        this.spanY = spanY;\n        return {\n            spanX, spanY, level, sequence\n        }       \n    }\n\n    traverse(callback) {\n        callback(this);\n        this.consequent.forEach(n => {\n            n.traverse(callback);\n        });\n        this.alternate.forEach(n => {\n            n.traverse(callback);\n        });\n    }\n\n    linkSource(source, linkMeta) {\n        this.source[linkMeta.part].unshift(source);\n    }\n}\n \nconst TYPE_MAPPING = {\n    IfStatement,\n    SwitchStatement,\n    SwitchCase,\n    ForEachStatement,\n    WhileStatement,\n    Root,\n    other: BaseNode,\n}\n\nfunction mapFunc(type)  {\n    return function(n, idx) {\n        const p = makeAST(n);\n        p.parent = this;\n        p.idx = idx;\n        p.parentIterateType = type;\n        p.makeEndpoint();\n        return p;\n    }\n}\nfunction makeAST(source) {\n    const type = source.type;\n    const Constructor = TYPE_MAPPING[type] || TYPE_MAPPING.other;\n    const node = new Constructor(source);\n    return node;\n}\nexport { \n    makeAST,\n}\n\n"],"file":"baseNode.js"}