{"version":3,"sources":["core/layout/low-code-layout.js"],"names":["sqr","x","dist2","v","w","LowcodeLayout","configs","linkLength","gap","treeItemDraggable","reOrder","ast","flowStack","flowLinkStack","root","traverse","node","parentIterateType","isDraggable","push","type","source","layoutMeta","layoutMapping","vertical","horizontal","playgroundLayoutMapping","reflowBodyPreCalculate","level","sequence","isroot","currentTopNodeId","reflowPlaygroundPreCalculate","topNode","id","makeLink","instance","jflow","_layoutNode","isFree","finded","_linkStack","find","l","from","to","nowAnchor","anchor","slice","reflow","length","currentAnchor","d","dispatchEvent","JFlowEvent","point","y","verticalMapping","horizontalMapping","reduceWidth","Object","keys","forEach","columnNumber","idx","column","rowWidth","rows","rowNumber","getJflowInstance","getBoundingDimension","width","Math","max","reduceHeight","row","rowHeight","columns","height","reflowByMapping","values","mapping"],"mappings":"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","sourcesContent":["import JFlowEvent from '../events'; \nimport { DIRECTION } from '../utils/constance';\nimport { makeAST } from './low-code-types/baseNode';\n\nfunction sqr(x) {\n    return x * x;\n}\nfunction dist2(v, w) {\n    return sqr(v[0] - w[0]) + sqr(v[1] - w[1]);\n}\n\n/**\n    lowcode layout\n\n    type: \n        + IfStatement,\n        + SwitchStatement,\n        + SwitchCase,\n        + ForEachStatement,\n        + WhileStatement,\n        + Root,\n        + other,\n    \n    * @implements {Layout}\n */\nclass LowcodeLayout {\n    constructor(configs) {\n        this.linkLength = configs.linkLength || 18;\n        this.gap = configs.gap || 30;\n        this.treeItemDraggable = configs.treeItemDraggable ?? true;\n        this.reOrder(configs.ast);\n        this.static = true;\n    }\n    /**\n     * 从 ast 计算布局\n     * @param {AstNode} ast - ASL 树\n     */\n    reOrder(ast) {\n        this.ast = ast;\n        this.flowStack = [];\n        this.flowLinkStack = [];\n\n        this.root = makeAST(this.ast)// new AstNode(this.ast, this.flowStack, true);\n        this.root.traverse((node) => {\n            if(node.parentIterateType !== 'playground') {\n                node.isDraggable = this.treeItemDraggable\n            }\n            this.flowStack.push({\n                type: node.type,\n                configs: node.source,\n                layoutMeta: node,\n            });\n        });\n\n        const layoutMapping = {\n            vertical: {},\n            horizontal: {},\n        };\n        const playgroundLayoutMapping = {}\n        this.root.reflowBodyPreCalculate(0, 0, (level, sequence, node) => {\n            if(!node.isroot) {\n                if(!layoutMapping.vertical[level]){\n                    layoutMapping.vertical[level] = {};\n                }\n                layoutMapping.vertical[level][sequence] = node;\n                \n                if(!layoutMapping.horizontal[sequence]){\n                    layoutMapping.horizontal[sequence] = {};\n                }\n                layoutMapping.horizontal[sequence][level] = node;\n            }\n        });\n\n        let currentTopNodeId;\n        this.root.reflowPlaygroundPreCalculate(\n            (topNode) => {\n                currentTopNodeId = topNode.id;\n                playgroundLayoutMapping[topNode.id] = {\n                    vertical: {},\n                    horizontal: {},\n                    node: topNode,\n                }\n            },\n            (level, sequence, node) => {\n                const layoutMapping = playgroundLayoutMapping[currentTopNodeId];\n                if(!layoutMapping.vertical[level]){\n                    layoutMapping.vertical[level] = {};\n                }\n                layoutMapping.vertical[level][sequence] = node;\n                \n                if(!layoutMapping.horizontal[sequence]){\n                    layoutMapping.horizontal[sequence] = {};\n                }\n                layoutMapping.horizontal[sequence][level] = node;\n            })\n\n        this.layoutMapping = layoutMapping;\n        this.playgroundLayoutMapping = playgroundLayoutMapping;\n        this.root.makeLink((configs) => {\n            this.flowLinkStack.push(configs)\n        })\n    }\n\n    staticCheck(instance, jflow) {\n\n        if(instance._layoutNode && instance._layoutNode.isFree) {\n            return false;\n        }\n        const finded = jflow._linkStack.find(l => l.from === instance || l.to === instance);\n        if(!finded) {\n            return false;\n        }\n        const nowAnchor = instance.anchor.slice();\n        jflow.reflow();\n        if(jflow._linkStack.length < 2) return;\n        const currentAnchor = instance.anchor;\n        const d = dist2(nowAnchor, currentAnchor);\n        if(d > 1000) {\n            instance.dispatchEvent(new JFlowEvent('outOfFlow', {\n                anchor: nowAnchor,\n                instance,\n                jflow,\n                point: nowAnchor,\n            }))\n            return true;\n        }\n        return false;\n    }\n\n    reflowByMapping(layoutMapping, x = 0, y = 0) {\n        const linkLength = this.linkLength;\n        const gap = this.gap;\n        const {\n            vertical: verticalMapping,\n            horizontal: horizontalMapping,\n        } = layoutMapping;\n\n        let reduceWidth = x;\n        Object.keys(horizontalMapping).forEach((columnNumber, idx) => {\n            const column = horizontalMapping[columnNumber];\n            let rowWidth = 0;\n            const rows = Object.keys(column)\n            rows.forEach(rowNumber => {\n                const ast = column[rowNumber];\n                const instance = ast.getJflowInstance();\n                const { width } = instance.getBoundingDimension();\n                rowWidth = Math.max(width, rowWidth);\n            });\n            reduceWidth += idx === 0 ? 0: rowWidth/2\n            rows.forEach(rowNumber => {\n                const ast = column[rowNumber];\n                const instance = ast.getJflowInstance();\n                instance.anchor[0] = reduceWidth;\n            });\n            reduceWidth += (rowWidth/2 + gap) ;\n        });\n\n        let reduceHeight = y;\n        // console.log(verticalMapping)\n        Object.keys(verticalMapping).forEach((rowNumber, idx) => {\n            const row = verticalMapping[rowNumber];\n            let rowHeight = 0;\n            const columns = Object.keys(row)\n            columns.forEach(columnNumber => {\n                const ast = row[columnNumber];\n                const instance = ast.getJflowInstance();\n                const { height, width } = instance.getBoundingDimension();\n                rowHeight = Math.max(height, rowHeight);\n            });\n            reduceHeight += idx === 0 ? 0 : rowHeight/2;\n            columns.forEach(columnNumber => {\n                const ast = row[columnNumber];\n                const instance = ast.getJflowInstance();\n                instance.anchor[1] = reduceHeight;\n            });\n            reduceHeight += (rowHeight/2 + linkLength) ;\n        });\n        \n    }\n\n    findLayoutNode(configs) {\n        const finded = this.flowStack.find(node => node.configs === configs);\n        if(finded) {\n            return finded.layoutMeta;\n        }\n        return null;\n    }\n\n    reflow(jflow){\n        this.reflowByMapping(this.layoutMapping);\n        Object.values(this.playgroundLayoutMapping).forEach(mapping => {\n            const node = mapping.node.getJflowInstance();\n            this.reflowByMapping(mapping, node.anchor[0], node.anchor[1]);\n        })\n    }\n}\n\nexport default LowcodeLayout;"],"file":"low-code-layout.js"}