{"version":3,"sources":["core/flow/index.js"],"names":["JFlow","configs","uniqueName","eventAdapter","EventAdapter","initStack","initLayout","ctx","canvas","dpr","padding","position","scale","initialZoom","maxZoom","minZoom","offeset","_lastState","x","y","dragging","processing","_lastDragState","target","targetLink","_target","instance","link","moving","isInstanceDirty","isLinkDirty","cache","stack","belongs","point","meta","undefined","initialX","initialY","status","dragovering","_focus","_dragOverTarget","allowDrop","_tempInstance","_belongs","Object","assign","anchor","dom","c_width","width","c_height","height","raw_width","raw_height","left","top","reflow","DOMwrapper","canvasMeta","actual_width","actual_height","_createEventHandler","_getBoundingGroupRect","bounding_box","p_width","p_height","contentBox","offsetX","offsetY","w_ratio","h_ratio","align","scaleRatio","Math","min","_render","points","_stack","getBoundingRectPoints","nowx","nowy","destroyListener","apply","destroyPlainEventListener","unload","dragoverHandler","_onDragover","bind","dropHandler","_onDrop","addEventListener","removeEventListener","destroy","offsetPoint","event","_calculatePointBack","topLayerPoint","_currentp","checkHit","_getMovingTarget","linkStack","_linkStack","movingtarget","from","to","lock","_layoutNode","isLocked","getNodes","isDraggable","readMessage","_dragCurrentData","oldIns","dispatchEvent","JFlowEvent","preventDefault","stopPropagation","_targetLockOn","_processDragOver","Promise","resolve","then","clientX","clientY","payload","consumeMessage","jflow","requestAnimationFrame","deltaX","deltaY","_zooming","newScale","amount","deltaScale","currentWidth","currentHeight","deltaWidth","deltaHeight","tX","tY","pX","pY","_panning","_recalculatePosition","t","bubbleEvent","bubbles","style","cursor","forEach","isDocument","_clearTarget","checkresult","_layout","staticCheck","console","log","removeTempDraggingInstance","p","l","setTransform","clearRect","transform","_resetTransform","render","save","restore","EventTarget","prototype","MessageMixin","StackMixin","LayoutMixin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AA48BA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAl+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACMA,K;;;;;AACF,iBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACjB;AACA,UAAKC,UAAL,GAAkB,OAAlB;AACA;AACR;AACA;;AACQ,UAAKC,YAAL,GAAoB,IAAIC,mBAAJ,CAAiBH,OAAO,CAACE,YAAzB,CAApB;;AACA,UAAKE,SAAL,CAAeJ,OAAf;;AACA,UAAKK,UAAL,CAAgBL,OAAhB;AACA;AACR;AACA;AACA;AACA;AACA;;;AACQ,UAAKM,GAAL,GAAW,IAAX;AACA,UAAKC,MAAL,GAAc,IAAd;AACA,UAAKC,GAAL,GAAW,CAAX;AACA,UAAKC,OAAL,GAAe,EAAf;AACA;AACR;AACA;AACA;AACA;AACA;AACA;;AACQ,UAAKC,QAAL,GAAgB,IAAhB;AACN,UAAKC,KAAL,GAAa,IAAb;AACM,UAAKC,WAAL,GAAmBZ,OAAO,CAACY,WAA3B;AACA,UAAKC,OAAL,GAAeb,OAAO,CAACa,OAAR,IAAmB,CAAlC;AACA,UAAKC,OAAL,GAAed,OAAO,CAACc,OAAR,IAAmB,EAAlC,CA9BiB,CA+BvB;AACA;;AACA,UAAKC,OAAL,GAAe,IAAf;AACM,UAAKC,UAAL,GAAkB;AACdC,MAAAA,CAAC,EAAE,IADW;AAEdC,MAAAA,CAAC,EAAE,IAFW;AAGdC,MAAAA,QAAQ,EAAE,KAHI;AAIdC,MAAAA,UAAU,EAAE;AAJE,KAAlB;AAMA,UAAKC,cAAL,GAAsB;AAClBC,MAAAA,MAAM,EAAE,IADU;AAElBC,MAAAA,UAAU,EAAE,IAFM;AAGlBH,MAAAA,UAAU,EAAE;AAHM,KAAtB;AAMA,UAAKI,OAAL,GAAe;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,IAAI,EAAE,IAFK;AAGXC,MAAAA,MAAM,EAAE,IAHG;AAIXC,MAAAA,eAAe,EAAE,KAJN;AAKXC,MAAAA,WAAW,EAAE,KALF;AAMX;AACAC,MAAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE,IADJ;AAEHC,QAAAA,OAAO,EAAE,IAFN;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAPI;AAYXC,MAAAA,IAAI,EAAE;AACFjB,QAAAA,CAAC,EAAEkB,SADD;AAEFjB,QAAAA,CAAC,EAAEiB,SAFD;AAGFC,QAAAA,QAAQ,EAAED,SAHR;AAIFE,QAAAA,QAAQ,EAAEF;AAJR,OAZK;AAkBXG,MAAAA,MAAM,EAAE;AACJC,QAAAA,WAAW,EAAE,KADT;AAEJpB,QAAAA,QAAQ,EAAE,KAFN;AAGJC,QAAAA,UAAU,EAAE;AAHR;AAlBG,KAAf;AAyBA,UAAKoB,MAAL,GAAc;AACVf,MAAAA,QAAQ,EAAE;AADA,KAAd;AAIA,UAAKgB,eAAL,GAAuB,IAAvB,CA3EiB,CA4EjB;AAEA;;AACA,UAAKC,SAAL,GAAiB1C,OAAO,CAAC0C,SAAzB;AACA,UAAKC,aAAL,GAAqB,IAArB;AAhFiB;AAiFpB;AACD;AACJ;AACA;AACA;;;;;WACI,iCAAwBlB,QAAxB,EAAkC;AAC9BA,MAAAA,QAAQ,CAACmB,QAAT,GAAoB,IAApB;AACA,WAAKD,aAAL,GAAqBlB,QAArB;AACAoB,MAAAA,MAAM,CAACC,MAAP,CAAc,KAAKtB,OAAnB,EAA4B;AACxBG,QAAAA,MAAM,EAAE,CAAC,KAAKgB,aAAN,CADgB;AAExBxB,QAAAA,QAAQ,EAAE;AAFc,OAA5B;AAIH;AAED;AACJ;AACA;AACA;;;;WACI,sCAA6B;AACzB,UAAG,KAAKwB,aAAR,EAAuB;AACnB;AACA,YAAMI,MAAM,GAAG,KAAKJ,aAAL,CAAmBI,MAAlC;AACA,aAAKJ,aAAL,GAAqB,IAArB;AACA,eAAOI,MAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;WACI,gBAAOC,GAAP,EAAY;AACR,0BASI,0BAAaA,GAAb,CATJ;AAAA,UACIzC,MADJ,iBACIA,MADJ;AAAA,UAEID,GAFJ,iBAEIA,GAFJ;AAAA,UAGWE,GAHX,iBAGIG,KAHJ;AAAA,UAIWsC,OAJX,iBAIIC,KAJJ;AAAA,UAKYC,QALZ,iBAKIC,MALJ;AAAA,UAMIC,SANJ,iBAMIA,SANJ;AAAA,UAOIC,UAPJ,iBAOIA,UAPJ;AAAA,UAQIC,IARJ,iBAQIA,IARJ;AAAA,UAQUC,GARV,iBAQUA,GARV;;AAUA,WAAKC,MAAL;AACA,WAAKnD,GAAL,GAAWA,GAAX;AACA,WAAKoD,UAAL,GAAkBV,GAAlB;AACA,WAAKzC,MAAL,GAAcA,MAAd;AACA,WAAKoD,UAAL,GAAkB;AACdT,QAAAA,KAAK,EAAEG,SADO;AAEdD,QAAAA,MAAM,EAAEE,UAFM;AAGdM,QAAAA,YAAY,EAAEX,OAHA;AAIdY,QAAAA,aAAa,EAAEV;AAJD,OAAlB;AAMA,WAAK3C,GAAL,GAAWA,GAAX;;AACA,WAAKsD,mBAAL;;AACA,WAAKC,qBAAL;;AAEA,UAAMtD,OAAO,GAAG,KAAKA,OAArB;AACA,+BAAmD,KAAKuD,YAAxD;AAAA,UAAeC,OAAf,sBAAQf,KAAR;AAAA,UAAgCgB,QAAhC,sBAAwBd,MAAxB;AAAA,UAA0CnC,CAA1C,sBAA0CA,CAA1C;AAAA,UAA6CC,CAA7C,sBAA6CA,CAA7C;AACA,UAAMiD,UAAU,GAAG;AACflD,QAAAA,CAAC,EAAER,OADY;AAEfS,QAAAA,CAAC,EAAET,OAFY;AAGfyC,QAAAA,KAAK,EAAED,OAAO,GAAGxC,OAAO,GAAG,CAHZ;AAIf2C,QAAAA,MAAM,EAAED,QAAQ,GAAG1C,OAAO,GAAG;AAJd,OAAnB;AAMA,UAAMC,QAAQ,GAAG;AAAEO,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE,CAAX;AAAckD,QAAAA,OAAO,EAAE,CAAvB;AAA0BC,QAAAA,OAAO,EAAE;AAAnC,OAAjB;AACA,UAAMC,OAAO,GAAGH,UAAU,CAACjB,KAAX,GAAmBe,OAAnC;AACA,UAAMM,OAAO,GAAGJ,UAAU,CAACf,MAAX,GAAoBc,QAApC;AACA,UAAMM,KAAK,GAAGF,OAAO,IAAIC,OAAX,GAAqB,GAArB,GAA2B,GAAzC;AACA,UAAIE,UAAJ;;AACA,UAAG,KAAK7D,WAAR,EAAqB;AACjB6D,QAAAA,UAAU,GAAG,KAAK7D,WAAlB;AACH,OAFD,MAEO;AACH6D,QAAAA,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASL,OAAT,EAAkBC,OAAlB,CAAb;AACH;;AAED,WAAK5D,KAAL,GAAa8D,UAAb;;AACA,UAAGA,UAAU,GAAG,KAAK5D,OAArB,EAA8B;AAC1B,aAAKA,OAAL,GAAe4D,UAAf;AACH;;AACD,UAAGA,UAAU,GAAG,KAAK3D,OAArB,EAA8B;AAC1B,aAAKA,OAAL,GAAe2D,UAAf;AACH;;AAED/D,MAAAA,QAAQ,CAACO,CAAT,GAAauD,KAAK,KAAK,GAAV,GAAgBL,UAAU,CAAClD,CAA3B,GAA+B,CAACkD,UAAU,CAACjB,KAAX,GAAmBe,OAAO,GAAGQ,UAA9B,IAA4C,CAA5C,GAAgDhE,OAA5F;AACAC,MAAAA,QAAQ,CAACQ,CAAT,GAAasD,KAAK,KAAK,GAAV,GAAgBL,UAAU,CAACjD,CAA3B,GAA+B,CAACiD,UAAU,CAACf,MAAX,GAAoBc,QAAQ,GAAGO,UAAhC,IAA8C,CAA9C,GAAkDhE,OAA9F;AACAC,MAAAA,QAAQ,CAAC0D,OAAT,GAAmB1D,QAAQ,CAACO,CAAT,GAAaA,CAAC,GAAGwD,UAApC;AACA/D,MAAAA,QAAQ,CAAC2D,OAAT,GAAmB3D,QAAQ,CAACQ,CAAT,GAAaA,CAAC,GAAGuD,UAApC;AACA,WAAK/D,QAAL,GAAgBA,QAAhB;;AACA,WAAKkE,OAAL;AACH;;;WAED,iCAAwB;AACpB,UAAMC,MAAM,GAAG,KAAKC,MAAL,CAAYC,qBAAZ,EAAf;;AACA,UAAG,KAAKf,YAAR,EAAsB;AAClB,aAAKA,YAAL,GAAoB,6BAAaa,MAAb,CAApB;AACA,kCAGI,KAAKb,YAHT;AAAA,YACOgB,IADP,uBACI/D,CADJ;AAAA,YAEOgE,IAFP,uBAEI/D,CAFJ;AAIA,YAAMP,KAAK,GAAG,KAAKA,KAAnB;AACA,aAAKD,QAAL,CAAcO,CAAd,GAAkB,KAAKP,QAAL,CAAc0D,OAAd,GAAwBY,IAAI,GAAGrE,KAAjD;AACA,aAAKD,QAAL,CAAcQ,CAAd,GAAkB,KAAKR,QAAL,CAAc2D,OAAd,GAAwBY,IAAI,GAAGtE,KAAjD;AACH,OATD,MASO;AACH,aAAKqD,YAAL,GAAoB,6BAAaa,MAAb,CAApB;AACH;AACJ;;;WAED,+BAAsB;AAAA;;AAClB,UAAMtE,MAAM,GAAG,KAAKA,MAApB;AACA,UAAI2E,eAAJ;AACA,WAAKhF,YAAL,CAAkBiF,KAAlB,CAAwB,IAAxB;;AACA,UAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAM;AACpC,QAAA,MAAI,CAAClF,YAAL,CAAkBmF,MAAlB,CAAyB,MAAzB;AACH,OAFD;;AAGAH,MAAAA,eAAe,GAAGE,yBAAlB;;AAEA,UAAG,KAAK1C,SAAR,EAAmB;AACf,YAAM4C,eAAe,GAAG,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAxB;;AACA,YAAMC,WAAW,GAAG,KAAKC,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAApB;;AACAjF,QAAAA,MAAM,CAACoF,gBAAP,CAAwB,UAAxB,EAAoCL,eAApC;AACA/E,QAAAA,MAAM,CAACoF,gBAAP,CAAwB,MAAxB,EAAgCF,WAAhC;;AACAP,QAAAA,eAAe,GAAG,2BAAM;AACpBE,UAAAA,yBAAyB;AACzB7E,UAAAA,MAAM,CAACqF,mBAAP,CAA2B,UAA3B,EAAuCN,eAAvC;AACA/E,UAAAA,MAAM,CAACqF,mBAAP,CAA2B,MAA3B,EAAmCH,WAAnC;AACH,SAJD;AAKH;;AACD,WAAKI,OAAL,GAAeX,eAAf;AACH;;;WAED,uBAAcY,WAAd,EAA2BC,KAA3B,EAAkC;AAAA;;AAC9B,UAAI9D,KAAK,GAAG,KAAK+D,mBAAL,CAAyBF,WAAzB,CAAZ;;AACA,UAAMG,aAAa,GAAGhE,KAAtB;AACA,WAAKiE,SAAL,GAAiBjE,KAAjB;AACA,UAAIF,KAAK,GAAG,KAAK+C,MAAjB;AACA,UAAMxD,MAAM,GAAGS,KAAK,CAACoE,QAAN,CAAelE,KAAf,EAAsB,UAACR,QAAD,EAAc;AAC/C,eAAO,MAAI,CAACD,OAAL,CAAac,MAAb,CAAoBnB,QAApB,IAAiCM,QAAQ,KAAK,MAAI,CAAC2E,gBAAL,EAArD;AACH,OAFc,CAAf;AAGA,UAAIC,SAAS,GAAG,KAAKC,UAArB;AACA,UAAItE,OAAO,GAAG,IAAd;;AACA,UAAGV,MAAH,EAAW;AACP+E,QAAAA,SAAS,GAAG/E,MAAM,CAACsB,QAAP,CAAgB0D,UAA5B;AACArE,QAAAA,KAAK,GAAGX,MAAM,CAACsB,QAAP,CAAgBsD,SAAxB;AACAnE,QAAAA,KAAK,GAAGT,MAAM,CAACsB,QAAP,CAAgBkC,MAAxB;AACA9C,QAAAA,OAAO,GAAGV,MAAM,CAACsB,QAAjB;AACH;;AACD,UAAMrB,UAAU,GAAG8E,SAAS,CAACF,QAAV,CAAmBlE,KAAnB,EAA0B,UAACP,IAAD,EAAU;AACnD,YAAG,CAAC,MAAI,CAACF,OAAL,CAAac,MAAb,CAAoBnB,QAAxB,EAAkC;AAC9B,iBAAO,KAAP;AACH;;AACD,YAAMoF,YAAY,GAAG,MAAI,CAACH,gBAAL,EAArB;;AACA,eAAO1E,IAAI,CAAC8E,IAAL,KAAcD,YAAd,IAA8B7E,IAAI,CAAC+E,EAAL,KAAYF,YAAjD;AACH,OANkB,CAAnB;AAQA1D,MAAAA,MAAM,CAACC,MAAP,CAAc,KAAKtB,OAAnB,EAA4B;AACxBC,QAAAA,QAAQ,EAAEH,MADc;AAExBI,QAAAA,IAAI,EAAEH,UAFkB;AAGxBK,QAAAA,eAAe,EAAEN,MAAM,KAAK,KAAKE,OAAL,CAAaC,QAHjB;AAIxBI,QAAAA,WAAW,EAAEN,UAAU,KAAK,KAAKC,OAAL,CAAaE;AAJjB,OAA5B;AAMAmB,MAAAA,MAAM,CAACC,MAAP,CAAc,KAAKtB,OAAL,CAAaM,KAA3B,EAAkC;AAC9BC,QAAAA,KAAK,EAALA,KAD8B;AAE9BC,QAAAA,OAAO,EAAPA,OAF8B;AAG9BC,QAAAA,KAAK,EAALA,KAH8B;AAI9BgE,QAAAA,aAAa,EAAbA;AAJ8B,OAAlC;AAMApD,MAAAA,MAAM,CAACC,MAAP,CAAc,KAAKtB,OAAL,CAAaU,IAA3B,EAAiC;AAC7BjB,QAAAA,CAAC,EAAE6E,WAAW,CAAC,CAAD,CADe;AAE7B5E,QAAAA,CAAC,EAAE4E,WAAW,CAAC,CAAD;AAFe,OAAjC;;AAKA,UAAGC,KAAK,KAAK,YAAV,IAA0B,CAAC,KAAKvE,OAAL,CAAac,MAAb,CAAoBnB,QAA/C,IAA2D,CAAC,KAAKK,OAAL,CAAac,MAAb,CAAoBC,WAAnF,EAAgG;AAC5F,YAAIgE,YAAY,GAAGjF,MAAnB;;AACA,eAAOiF,YAAY,IAAIA,YAAY,CAAC3D,QAAb,CAAsB8D,IAAtC,IAA8CH,YAAY,KAAK,IAAtE,EAA4E;AACxEA,UAAAA,YAAY,GAAGA,YAAY,CAAC3D,QAA5B;AACH,SAJ2F,CAK5F;AACA;AACA;;;AACA,YAAG2D,YAAH,EAAiB;AACb,cAAGA,YAAY,CAACI,WAAhB,EAA6B;AACzB,gBAAGJ,YAAY,CAACI,WAAb,CAAyBC,QAA5B,EAAsC;AAClCL,cAAAA,YAAY,GAAGA,YAAY,CAACI,WAAb,CAAyBE,QAAzB,EAAf;AACH,aAFD,MAEO,IAAG,CAACN,YAAY,CAACI,WAAb,CAAyBG,WAA7B,EAA0C;AAC7CP,cAAAA,YAAY,GAAGpE,SAAf;AACH,aAFM,MAEA;AACHoE,cAAAA,YAAY,GAAG,CAACA,YAAD,CAAf;AACH;AACJ,WARD,MAQO;AACHA,YAAAA,YAAY,GAAG,CAACA,YAAD,CAAf;AACH;AACJ;;AACD1D,QAAAA,MAAM,CAACC,MAAP,CAAc,KAAKtB,OAAnB,EAA4B;AACxBG,UAAAA,MAAM,EAAE4E,YADgB,CAExB;;AAFwB,SAA5B;AAIH;;AACD,aAAO,KAAK/E,OAAZ;AACH;;;WAED,4BAAmB;AACf,aAAO,KAAKA,OAAL,CAAaG,MAAb,IAAuB,KAAKH,OAAL,CAAaG,MAAb,CAAoB,CAApB,CAA9B;AACH;;;WAED,0BAAiBF,QAAjB,EAA2BsE,KAA3B,EAAkC;AAC9B,UAAG,KAAKtD,eAAL,KAAyBhB,QAA5B,EAAsC;AAAA;;AAClC,YAAMH,MAAM,wBAAG,KAAKyF,WAAL,EAAH,sDAAG,kBAAoBtF,QAAnC;AACA,aAAKuF,gBAAL,GAAwB1F,MAAxB;;AACA,YAAG,KAAKmB,eAAR,EAAyB;AACrB,cAAMwE,MAAM,GAAG,KAAKxE,eAApB;AACA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AACgBwE,UAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,kBAAJ,CAAe,WAAf,EAA4B;AAC7CpB,YAAAA,KAAK,EAALA,KAD6C;AAE7CtE,YAAAA,QAAQ,EAAEwF,MAFmC;AAG7C3F,YAAAA,MAAM,EAANA;AAH6C,WAA5B,CAArB;AAKH;;AACD,YAAGG,QAAH,EAAa;AACT;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACgBA,UAAAA,QAAQ,CAACyF,aAAT,CAAuB,IAAIC,kBAAJ,CAAe,WAAf,EAA4B;AAC/CpB,YAAAA,KAAK,EAALA,KAD+C;AAE/CtE,YAAAA,QAAQ,EAARA,QAF+C;AAG/CH,YAAAA,MAAM,EAANA;AAH+C,WAA5B,CAAvB;AAKH;;AACD,aAAKmB,eAAL,GAAuBhB,QAAvB;AACH,OAnCD,MAmCO,IAAG,KAAKgB,eAAR,EAAwB;AAC3B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACY,aAAKA,eAAL,CAAqByE,aAArB,CAAmC,IAAIC,kBAAJ,CAAe,UAAf,EAA2B;AAC1DpB,UAAAA,KAAK,EAALA,KAD0D;AAE1DtE,UAAAA,QAAQ,EAARA,QAF0D;AAG1DH,UAAAA,MAAM,EAAE,KAAK0F;AAH6C,SAA3B,CAAnC;AAKH;AACJ;;;WAED,qBAAYjB,KAAZ,EAAmB;AAAA;;AACf;AACAA,MAAAA,KAAK,CAACqB,cAAN;AACArB,MAAAA,KAAK,CAACsB,eAAN;AACA,UAAG,KAAKhG,cAAL,CAAoBD,UAAvB,EAAmC;AACnC,WAAKC,cAAL,CAAoBD,UAApB,GAAiC,IAAjC;AACA,UAAQgD,OAAR,GAA6B2B,KAA7B,CAAQ3B,OAAR;AAAA,UAAiBC,OAAjB,GAA6B0B,KAA7B,CAAiB1B,OAAjB;AACAxB,MAAAA,MAAM,CAACC,MAAP,CAAc,KAAKtB,OAAL,CAAac,MAA3B,EAAmC;AAC/BC,QAAAA,WAAW,EAAE;AADkB,OAAnC;;AAGA,WAAK+E,aAAL,CAAmB,CAAClD,OAAD,EAAUC,OAAV,CAAnB;;AACA,UAAM5C,QAAQ,GAAG,KAAKD,OAAL,CAAaC,QAAb,IAAyB,KAAKD,OAAL,CAAaE,IAAvD;;AACA,WAAK6F,gBAAL,CAAsB9F,QAAtB,EAAgCsE,KAAhC;;AACA,UAAG,KAAKvE,OAAL,CAAaK,WAAb,IAA4B,KAAKL,OAAL,CAAaI,eAA5C,EAA6D;AACzD4F,QAAAA,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAM;AACzB,UAAA,MAAI,CAAC9C,OAAL;;AACA,UAAA,MAAI,CAACpD,OAAL,CAAaK,WAAb,GAA2B,KAA3B;AACA,UAAA,MAAI,CAACL,OAAL,CAAaI,eAAb,GAA+B,KAA/B;AACA,UAAA,MAAI,CAACP,cAAL,CAAoBD,UAApB,GAAiC,KAAjC;AACH,SALD;AAMH,OAPD,MAOO;AACH,aAAKC,cAAL,CAAoBD,UAApB,GAAiC,KAAjC;AACH;AACJ;;;WAED,iBAAQ2E,KAAR,EAAe;AAAA;;AACX,UAAQ3B,OAAR,GAA+C2B,KAA/C,CAAQ3B,OAAR;AAAA,UAAiBC,OAAjB,GAA+C0B,KAA/C,CAAiB1B,OAAjB;AAAA,UAA0BsD,OAA1B,GAA+C5B,KAA/C,CAA0B4B,OAA1B;AAAA,UAAmCC,OAAnC,GAA+C7B,KAA/C,CAAmC6B,OAAnC;AACA,UAAMC,OAAO,GAAG,KAAKC,cAAL,EAAhB;AACA,UAAMrG,QAAQ,GAAGoG,OAAO,CAACpG,QAAzB;;AACA,UAAG,KAAKgB,eAAR,EAAyB;AACrB,YAAMwE,MAAM,GAAG,KAAKxE,eAApB;AACAwE,QAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,kBAAJ,CAAe,aAAf,EAA8B;AAC/CpB,UAAAA,KAAK,EAALA,KAD+C;AAE/CtE,UAAAA,QAAQ,EAAEwF;AAFqC,SAA9B,CAArB;AAIA,aAAKxE,eAAL,GAAuB,IAAvB;AACH;;AACD,0BAGI,KAAKjB,OAHT;AAAA,UACIE,IADJ,iBACIA,IADJ;AAAA,UAEcJ,MAFd,iBAEIG,QAFJ;AAIA,gCAEI,KAAKD,OAAL,CAAaM,KAFjB;AAAA,UACIG,KADJ,uBACIA,KADJ;AAAA,UACWD,OADX,uBACWA,OADX;;AAGA,UAAGN,IAAH,EAAS;AACL;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYD,QAAAA,QAAQ,CAACsB,MAAT,GAAkBd,KAAlB;AACAP,QAAAA,IAAI,CAACwF,aAAL,CAAmB,IAAIC,kBAAJ,CAAe,MAAf,EAAuB;AACtCpB,UAAAA,KAAK,EAALA,KADsC;AAEtCtE,UAAAA,QAAQ,EAARA,QAFsC;AAGtCC,UAAAA,IAAI,EAAJA,IAHsC;AAItCqG,UAAAA,KAAK,EAAE,IAJ+B;AAKtC/F,UAAAA,OAAO,EAAPA,OALsC;AAMtCC,UAAAA,KAAK,EAALA;AANsC,SAAvB,CAAnB;AAQH,OAtBD,MAsBO,IAAGX,MAAH,EAAW;AACd;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACYA,QAAAA,MAAM,CAAC4F,aAAP,CAAqB,IAAIC,kBAAJ,CAAe,MAAf,EAAuB;AACxCpB,UAAAA,KAAK,EAALA,KADwC;AAExCtE,UAAAA,QAAQ,EAARA,QAFwC;AAGxCsG,UAAAA,KAAK,EAAE,IAHiC;AAIxCzG,UAAAA,MAAM,EAANA,MAJwC;AAKxCW,UAAAA,KAAK,EAALA;AALwC,SAAvB,CAArB;AAOH,OAnBM,MAmBA;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,aAAKiF,aAAL,CAAmB,IAAIC,kBAAJ,CAAe,MAAf,EAAuB;AACtCpB,UAAAA,KAAK,EAALA,KADsC;AAEtCtE,UAAAA,QAAQ,EAARA,QAFsC;AAGtCsG,UAAAA,KAAK,EAAE,IAH+B;AAItCzG,UAAAA,MAAM,EAANA,MAJsC;AAKtCW,UAAAA,KAAK,EAALA;AALsC,SAAvB,CAAnB;AAOH;;AAED+F,MAAAA,qBAAqB,CAAC,YAAM;AACxB,QAAA,MAAI,CAACxG,OAAL,CAAaC,QAAb,GAAwB,IAAxB;AACA,QAAA,MAAI,CAACD,OAAL,CAAaE,IAAb,GAAoB,IAApB;AACAmB,QAAAA,MAAM,CAACC,MAAP,CAAc,MAAI,CAACtB,OAAL,CAAac,MAA3B,EAAmC;AAChCC,UAAAA,WAAW,EAAE;AADmB,SAAnC;AAGH,OANoB,CAArB;AAOH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,qBAAY6B,OAAZ,EAAqBC,OAArB,EAA8B4D,MAA9B,EAAsCC,MAAtC,EAA8CnC,KAA9C,EAAqD;AAAA;;AACjD,UAAG,KAAKoC,QAAR,EAAkB;AAClB,WAAKA,QAAL,GAAgB,IAAhB;AACA,gCAAmD,KAAKnE,YAAxD;AAAA,UAAeC,OAAf,uBAAQf,KAAR;AAAA,UAAgCgB,QAAhC,uBAAwBd,MAAxB;AAAA,UAA0CnC,CAA1C,uBAA0CA,CAA1C;AAAA,UAA6CC,CAA7C,uBAA6CA,CAA7C;AACA,UAAIkH,QAAQ,GAAG,KAAKzH,KAApB;AACA,UAAM0H,MAAM,GAAGH,MAAM,GAAG,CAAT,GAAa,GAAb,GAAmB,IAAI,GAAtC;AACAE,MAAAA,QAAQ,IAAIC,MAAZ;;AAEA,UAAI,KAAKxH,OAAL,IAAgBuH,QAAQ,GAAG,KAAKvH,OAApC,EAA4C;AACxC;AACAuH,QAAAA,QAAQ,GAAG,KAAKvH,OAAhB;AACH;;AAED,UAAG,KAAKC,OAAL,IAAgBsH,QAAQ,GAAG,KAAKtH,OAAnC,EAA4C;AACxCsH,QAAAA,QAAQ,GAAG,KAAKtH,OAAhB;AACH;;AAED,UAAIwH,UAAU,GAAMF,QAAQ,GAAG,KAAKzH,KAApC;AACA,UAAI4H,YAAY,GAAItE,OAAO,GAAG,KAAKtD,KAAnC;AACA,UAAI6H,aAAa,GAAGtE,QAAQ,GAAG,KAAKvD,KAApC;AACA,UAAI8H,UAAU,GAAMxE,OAAO,GAAGqE,UAA9B;AACA,UAAII,WAAW,GAAKxE,QAAQ,GAAGoE,UAA/B;AAEA,UAAIK,EAAE,GAAGvE,OAAO,GAAG,KAAK1D,QAAL,CAAcO,CAAjC;AACA,UAAI2H,EAAE,GAAGvE,OAAO,GAAG,KAAK3D,QAAL,CAAcQ,CAAjC;AACA,UAAI2H,EAAE,GAAG,CAACF,EAAD,GAAMJ,YAAf;AACA,UAAIO,EAAE,GAAG,CAACF,EAAD,GAAMJ,aAAf;AAEA,WAAK7H,KAAL,GAAayH,QAAb;AACA,WAAK1H,QAAL,CAAcO,CAAd,IAAmB4H,EAAE,GAAGJ,UAAxB;AACA,WAAK/H,QAAL,CAAcQ,CAAd,IAAmB4H,EAAE,GAAGJ,WAAxB;AACA,WAAKhI,QAAL,CAAc0D,OAAd,GAAwB,KAAK1D,QAAL,CAAcO,CAAd,GAAkBA,CAAC,GAAGmH,QAA9C;AACA,WAAK1H,QAAL,CAAc2D,OAAd,GAAwB,KAAK3D,QAAL,CAAcQ,CAAd,GAAkBA,CAAC,GAAGkH,QAA9C;AACA,WAAKlB,aAAL,CAAmB,IAAIC,kBAAJ,CAAe,SAAf,CAAnB;AACAa,MAAAA,qBAAqB,CAAC,YAAM;AACxB,QAAA,MAAI,CAACpD,OAAL;;AACA,QAAA,MAAI,CAACuD,QAAL,GAAgB,KAAhB;AACH,OAHoB,CAArB;AAIH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,oBAAWF,MAAX,EAAmBC,MAAnB,EAA2BnC,KAA3B,EAAkC;AAAA;;AAC9B,UAAG,KAAKgD,QAAR,EAAkB;AAClB,WAAKA,QAAL,GAAgB,IAAhB;;AACA,WAAKC,oBAAL,CAA0Bf,MAA1B,EAAkCC,MAAlC;AACA;AACR;AACA;AACA;AACA;;;AACQ,WAAKhB,aAAL,CAAmB,IAAIC,kBAAJ,CAAe,SAAf,CAAnB;AACAa,MAAAA,qBAAqB,CAAC,YAAM;AACxB,QAAA,MAAI,CAACpD,OAAL;;AACA,QAAA,MAAI,CAACmE,QAAL,GAAgB,KAAhB;AACH,OAHoB,CAArB;AAIH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,2BAAkB3E,OAAlB,EAA2BC,OAA3B,EAAoC0B,KAApC,EAA2C;AACvC,WAAKuB,aAAL,CAAmB,CAAClD,OAAD,EAAUC,OAAV,CAAnB,EAAuC,YAAvC;;AACAxB,MAAAA,MAAM,CAACC,MAAP,CAAc,KAAKtB,OAAL,CAAaU,IAA3B,EAAiC;AAC7BE,QAAAA,QAAQ,EAAEgC,OADmB;AAE7B/B,QAAAA,QAAQ,EAAEgC;AAFmB,OAAjC;AAIAxB,MAAAA,MAAM,CAACC,MAAP,CAAc,KAAKtB,OAAL,CAAac,MAA3B,EAAmC;AAC/BnB,QAAAA,QAAQ,EAAE,IADqB;AAE/BC,QAAAA,UAAU,EAAE;AAFmB,OAAnC;;AAIA,UAAG,KAAKI,OAAL,CAAaG,MAAhB,EAAwB;AACpB,YAAMA,MAAM,GAAG,KAAKyE,gBAAL,EAAf;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACYzE,QAAAA,MAAM,CAACuF,aAAP,CAAqB,IAAIC,kBAAJ,CAAe,YAAf,EAA6B;AAC9CpB,UAAAA,KAAK,EAALA,KAD8C;AAE9CtE,UAAAA,QAAQ,EAAEE,MAFoC;AAG9CoG,UAAAA,KAAK,EAAE;AAHuC,SAA7B,CAArB;AAKH;;AAED,UAAG,KAAKvG,OAAL,CAAaC,QAAhB,EAA0B;AACtB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,YAAMwH,CAAC,GAAG,KAAKzH,OAAL,CAAaC,QAAvB;AACAwH,QAAAA,CAAC,CAACC,WAAF,CAAc,IAAI/B,kBAAJ,CAAe,oBAAf,EAAqC;AAC/CpB,UAAAA,KAAK,EAALA,KAD+C;AAE/CzE,UAAAA,MAAM,EAAE2H,CAFuC;AAG/ClB,UAAAA,KAAK,EAAE,IAHwC;AAI/CoB,UAAAA,OAAO,EAAE;AAJsC,SAArC,CAAd;AAMH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,0BAAiB/E,OAAjB,EAA0BC,OAA1B,EAAmC0B,KAAnC,EAA0C;AAAA;;AACtC,iCAEI,KAAKvE,OAAL,CAAac,MAFjB;AAAA,UACInB,QADJ,wBACIA,QADJ;AAAA,UACcC,UADd,wBACcA,UADd;AAGA,+BAAiB,KAAKI,OAAL,CAAaU,IAA9B;AAAA,UAAQjB,CAAR,sBAAQA,CAAR;AAAA,UAAWC,CAAX,sBAAWA,CAAX;AACA,WAAKX,MAAL,CAAY6I,KAAZ,CAAkBC,MAAlB,GAA2B,SAA3B;;AACA,UAAG,CAAClI,QAAD,IAAa,CAACC,UAAjB,EAA6B;AACzB,kCAGI,KAAKkG,aAAL,CAAmB,CAAClD,OAAD,EAAUC,OAAV,CAAnB,CAHJ;AAAA,YACI3C,KADJ,uBACIA,IADJ;AAAA,YAEID,SAFJ,uBAEIA,QAFJ;;AAIA,YAAGA,SAAH,EAAa;AACT;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACgBA,UAAAA,SAAQ,CAACyF,aAAT,CAAuB,IAAIC,kBAAJ,CAAe,mBAAf,EAAoC;AACvDpB,YAAAA,KAAK,EAALA,KADuD;AAEvDtE,YAAAA,QAAQ,EAARA,SAFuD;AAGvDsG,YAAAA,KAAK,EAAE;AAHgD,WAApC,CAAvB;AAKH;AACJ;AACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ,WAAKb,aAAL,CAAmB,IAAIC,kBAAJ,CAAe,iBAAf,EAAkC;AACjDpB,QAAAA,KAAK,EAALA,KADiD;AAEjDgC,QAAAA,KAAK,EAAE;AAF0C,OAAlC,CAAnB;AAKA,UAAG,CAAC5G,QAAJ,EAAc;AACd,WAAKZ,MAAL,CAAY6I,KAAZ,CAAkBC,MAAlB,GAA2B,UAA3B;AACA,UAAGjI,UAAH,EAAe;AAEf,UAAMmF,YAAY,GAAG,KAAK/E,OAAL,CAAaG,MAAlC,CA7CsC,CA6CG;;AAEzC,WAAKH,OAAL,CAAac,MAAb,CAAoBlB,UAApB,GAAiC,IAAjC;AACA,UAAM6G,MAAM,GAAG7D,OAAO,GAAGnD,CAAzB;AACA,UAAMiH,MAAM,GAAG7D,OAAO,GAAGnD,CAAzB;;AAEA,UAAGqF,YAAH,EAAiB;AACbA,QAAAA,YAAY,CAAC+C,OAAb,CAAqB,UAAAL,CAAC,EAAI;AACtBA,UAAAA,CAAC,CAAClG,MAAF,CAAS,CAAT,KAAekF,MAAM,GAAG,MAAI,CAACtH,KAA7B;AACAsI,UAAAA,CAAC,CAAClG,MAAF,CAAS,CAAT,KAAemF,MAAM,GAAG,MAAI,CAACvH,KAA7B;AACH,SAHD;AAIH,OALD,MAKO;AACH,aAAKqI,oBAAL,CAA0Bf,MAA1B,EAAkCC,MAAlC;;AACA,aAAKhB,aAAL,CAAmB,IAAIC,kBAAJ,CAAe,SAAf,CAAnB;AACH;;AACD,iCAA2B,KAAKG,aAAL,CAAmB,CAAClD,OAAD,EAAUC,OAAV,CAAnB,CAA3B;AAAA,UAAQ5C,QAAR,wBAAQA,QAAR;AAAA,UAAkBC,IAAlB,wBAAkBA,IAAlB;;AACA,WAAK6F,gBAAL,CAAsB9F,QAAQ,IAAIC,IAAlC,EAAwCqE,KAAxC;;AAEAiC,MAAAA,qBAAqB,CAAC,YAAM;AACxB,QAAA,MAAI,CAACpD,OAAL;;AACA,QAAA,MAAI,CAACpD,OAAL,CAAaK,WAAb,GAA2B,KAA3B;AACA,QAAA,MAAI,CAACL,OAAL,CAAaI,eAAb,GAA+B,KAA/B;AACA,QAAA,MAAI,CAACJ,OAAL,CAAac,MAAb,CAAoBlB,UAApB,GAAiC,KAAjC;AACH,OALoB,CAArB;AAMH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,wBAAemI,UAAf,EAA2BxD,KAA3B,EAAkC;AAC9B,UAAM7D,IAAI,GAAG,KAAKV,OAAL,CAAaU,IAA1B;;AACA,UAAGA,IAAI,CAACE,QAAL,KAAkBF,IAAI,CAACjB,CAAvB,IACIiB,IAAI,CAACG,QAAL,KAAkBH,IAAI,CAAChB,CAD9B,EACiC;AACzB,YAAG6E,KAAK,CAACzE,MAAN,KAAiB,KAAKf,MAAzB,EAAgC;AAC5B,eAAKiJ,YAAL;;AACA;AACH;;AACD,YAAG,KAAKhI,OAAL,CAAaC,QAAb,IAAyB,CAAC8H,UAA7B,EAAyC;AACrC,cAAMN,CAAC,GAAG,KAAKzH,OAAL,CAAaC,QAAvB;AACA;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACoBwH,UAAAA,CAAC,CAACC,WAAF,CAAc,IAAI/B,kBAAJ,CAAe,OAAf,EAAwB;AAClCpB,YAAAA,KAAK,EAALA,KADkC;AAElCzE,YAAAA,MAAM,EAAE2H,CAF0B;AAGlClB,YAAAA,KAAK,EAAE,IAH2B;AAIlCoB,YAAAA,OAAO,EAAE;AAJyB,WAAxB,CAAd;;AAMA,eAAKK,YAAL;;AACA,eAAK5E,OAAL;;AACA;AACH,SArBD,MAqBO;AACH;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACoB,eAAKsC,aAAL,CAAmB,IAAIC,kBAAJ,CAAe,OAAf,EAAwB;AACvCpB,YAAAA,KAAK,EAALA,KADuC;AAEvCgC,YAAAA,KAAK,EAAE;AAFgC,WAAxB,CAAnB;;AAIA,eAAKyB,YAAL;;AACA,eAAK5E,OAAL;;AACA;AACH;AAER,OA7CD,MA6CO,IAAG,KAAKpD,OAAL,CAAaG,MAAhB,EAAwB;AAC3B,YAAI8H,WAAW,GAAG,KAAlB;;AACA,YAAG,KAAKC,OAAL,UAAH,EAAwB;AACpBD,UAAAA,WAAW,GAAG,KAAKE,WAAL,CAAiB,KAAKvD,gBAAL,EAAjB,CAAd;AACH;;AAED,YAAG,CAACqD,WAAD,IAAgB,KAAKjI,OAAL,CAAaE,IAAhC,EAAsC;AAClC,qCAEI,KAAKF,OAAL,CAAaM,KAFjB;AAAA,cACIG,KADJ,wBACIA,KADJ;AAAA,cACWD,OADX,wBACWA,OADX;AAGA,cAAMN,IAAI,GAAG,KAAKF,OAAL,CAAaE,IAA1B;;AACA,cAAMD,QAAQ,GAAG,KAAK2E,gBAAL,EAAjB;AACA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACgB1E,UAAAA,IAAI,CAACwF,aAAL,CAAmB,IAAIC,kBAAJ,CAAe,MAAf,EAAuB;AACtCpB,YAAAA,KAAK,EAALA,KADsC;AAEtCtE,YAAAA,QAAQ,EAARA,QAFsC;AAGtCC,YAAAA,IAAI,EAAJA,IAHsC;AAItCqG,YAAAA,KAAK,EAAE,IAJ+B;AAKtC/F,YAAAA,OAAO,EAAPA;AALsC,WAAvB,CAAnB;AAOA,eAAKR,OAAL,CAAaE,IAAb,GAAoB,IAApB;AACA,eAAKF,OAAL,CAAaC,QAAb,GAAwB,IAAxB;AACH;;AACD,YAAG,KAAKD,OAAL,CAAaG,MAAhB,EAAwB;AACpB,cAAG,KAAKH,OAAL,CAAaC,QAAhB,EAA0B;AACtB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACqBmI,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKrI,OAAL,CAAaC,QAArC;;AACD,iBAAKD,OAAL,CAAaC,QAAb,CAAsByH,WAAtB,CAAkC,IAAI/B,kBAAJ,CAAe,UAAf,EAA2B;AACzDpB,cAAAA,KAAK,EAALA,KADyD;AAEzDtE,cAAAA,QAAQ,EAAE,KAAK2E,gBAAL,EAF+C;AAGzD2B,cAAAA,KAAK,EAAE,IAHkD;AAIzDzG,cAAAA,MAAM,EAAE,KAAKE,OAAL,CAAaC,QAJoC;AAKzD0H,cAAAA,OAAO,EAAE;AALgD,aAA3B,CAAlC;AAOH,WApBD,MAoBO;AACH;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACoB,iBAAKjC,aAAL,CAAmB,IAAIC,kBAAJ,CAAe,UAAf,EAA2B;AAC1CpB,cAAAA,KAAK,EAALA,KAD0C;AAE1CtE,cAAAA,QAAQ,EAAE,KAAK2E,gBAAL,EAFgC;AAG1C2B,cAAAA,KAAK,EAAE;AAHmC,aAA3B,CAAnB;AAKH;AACJ;;AACD,aAAKvG,OAAL,CAAaG,MAAb,GAAsB,IAAtB;AACA,aAAKmI,0BAAL,GAxE2B,CAyE3B;;AACA,aAAKlF,OAAL;AACH;;AACD,WAAK4E,YAAL;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,4BAAmBpF,OAAnB,EAA4BC,OAA5B,EAAqC0B,KAArC,EAA4C;AACxC,iCAGI,KAAKuB,aAAL,CAAmB,CAAClD,OAAD,EAAUC,OAAV,CAAnB,CAHJ;AAAA,UACI3C,IADJ,wBACIA,IADJ;AAAA,UAEID,QAFJ,wBAEIA,QAFJ;;AAIA,UAAQwE,aAAR,GAA0B,KAAKzE,OAAL,CAAaM,KAAvC,CAAQmE,aAAR;;AACA,UAAGxE,QAAQ,IAAIC,IAAf,EAAqB;AACjB,YAAMJ,MAAM,GAAIG,QAAQ,IAAIC,IAA5B;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACYJ,QAAAA,MAAM,CAAC4H,WAAP,CAAmB,IAAI/B,kBAAJ,CAAe,cAAf,EAA+B;AAC9CpB,UAAAA,KAAK,EAALA,KAD8C;AAE9CgC,UAAAA,KAAK,EAAE,IAFuC;AAG9CzG,UAAAA,MAAM,EAANA,MAH8C;AAI9C2E,UAAAA,aAAa,EAAbA,aAJ8C;AAK9CkD,UAAAA,OAAO,EAAE;AALqC,SAA/B,CAAnB;AAOH,OApBD,MAoBO;AACH;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,aAAKjC,aAAL,CAAmB,IAAIC,kBAAJ,CAAe,cAAf,EAA+B;AAC9CpB,UAAAA,KAAK,EAALA,KAD8C;AAE9CgC,UAAAA,KAAK,EAAE,IAFuC;AAG9C9B,UAAAA,aAAa,EAAbA;AAH8C,SAA/B,CAAnB;AAKH;AACJ;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WAOI,wBAAc;AACVpD,MAAAA,MAAM,CAACC,MAAP,CAAc,KAAKtB,OAAL,CAAaU,IAA3B,EAAiC;AAC7BjB,QAAAA,CAAC,EAAEkB,SAD0B;AAE7BjB,QAAAA,CAAC,EAAEiB,SAF0B;AAG7BC,QAAAA,QAAQ,EAAED,SAHmB;AAI7BE,QAAAA,QAAQ,EAAEF;AAJmB,OAAjC;AAMAU,MAAAA,MAAM,CAACC,MAAP,CAAc,KAAKtB,OAAL,CAAac,MAA3B,EAAmC;AAC/BnB,QAAAA,QAAQ,EAAE,KADqB;AAE/BC,QAAAA,UAAU,EAAE;AAFmB,OAAnC;AAIAyB,MAAAA,MAAM,CAACC,MAAP,CAAc,KAAKtB,OAAnB,EAA4B;AACxBC,QAAAA,QAAQ,EAAE,IADc;AAExBC,QAAAA,IAAI,EAAE,IAFkB;AAGxBC,QAAAA,MAAM,EAAE;AAHgB,OAA5B;AAKH;;;WAED,8BAAqBsG,MAArB,EAA6BC,MAA7B,EAAqCvH,KAArC,EAA4C;AACxC,gCAAiB,KAAKqD,YAAtB;AAAA,UAAQ/C,CAAR,uBAAQA,CAAR;AAAA,UAAWC,CAAX,uBAAWA,CAAX;;AACA,UAAGP,KAAK,KAAKwB,SAAb,EAAwB;AACpBxB,QAAAA,KAAK,GAAG,KAAKA,KAAb;AACH;;AACD,WAAKD,QAAL,CAAcO,CAAd,IAAmBgH,MAAnB;AACN,WAAKvH,QAAL,CAAcQ,CAAd,IAAmBgH,MAAnB;AACM,WAAKxH,QAAL,CAAc0D,OAAd,GAAwB,KAAK1D,QAAL,CAAcO,CAAd,GAAkBA,CAAC,GAAGN,KAA9C;AACA,WAAKD,QAAL,CAAc2D,OAAd,GAAwB,KAAK3D,QAAL,CAAcQ,CAAd,GAAkBA,CAAC,GAAGP,KAA9C;AACH;;;WAED,8BAAqBoJ,CAArB,EAAwB;AACpB,UAAMpJ,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMD,QAAQ,GAAG,KAAKA,QAAtB;AACA,aAAO,CAACqJ,CAAC,CAAC,CAAD,CAAD,GAAOpJ,KAAP,GAAeD,QAAQ,CAAC0D,OAAzB,EAAkC2F,CAAC,CAAC,CAAD,CAAD,GAAOpJ,KAAP,GAAeD,QAAQ,CAAC2D,OAA1D,CAAP;AACH;;;WAED,6BAAoB0F,CAApB,EAAuB;AACnB,UAAMpJ,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMD,QAAQ,GAAG,KAAKA,QAAtB;AACA,aAAO,CAAC,CAACqJ,CAAC,CAAC,CAAD,CAAD,GAAOrJ,QAAQ,CAAC0D,OAAjB,IAA0BzD,KAA3B,EAAkC,CAACoJ,CAAC,CAAC,CAAD,CAAD,GAAOrJ,QAAQ,CAAC2D,OAAjB,IAA4B1D,KAA9D,CAAP;AACH;;;WAED,4BAAmBqJ,CAAnB,EAAsB;AAClB,UAAMrJ,KAAK,GAAG,KAAKA,KAAnB;AACA,aAAOA,KAAK,GAAGqJ,CAAf;AACH;;;WAED,2BAAkB;AACd,6BAA6C,KAAKrG,UAAlD;AAAA,UAAeV,OAAf,oBAAQC,KAAR;AAAA,UAAgCC,QAAhC,oBAAwBC,MAAxB;AACA,UAAM1C,QAAQ,GAAG,KAAKA,QAAtB;AACA,UAAMC,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAML,GAAG,GAAG,KAAKA,GAAjB;AACAA,MAAAA,GAAG,CAAC2J,YAAJ;AACA3J,MAAAA,GAAG,CAAC4J,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBjH,OAApB,EAA6BE,QAA7B;AACA7C,MAAAA,GAAG,CAACK,KAAJ,CAAU,KAAKH,GAAf,EAAoB,KAAKA,GAAzB;AACAF,MAAAA,GAAG,CAAC6J,SAAJ,CAAcxJ,KAAd,EAAqB,CAArB,EAAwB,CAAxB,EAA2BA,KAA3B,EAAkCD,QAAQ,CAAC0D,OAA3C,EAAoD1D,QAAQ,CAAC2D,OAA7D;AACH;AACA;AACL;AACA;;;;WACI,mBAAU;AACN,WAAK+F,eAAL;;AACA,UAAM9J,GAAG,GAAG,KAAKA,GAAjB;;AAEA,WAAKwE,MAAL,CAAYuF,MAAZ,CAAmB/J,GAAnB;;AACA,WAAKgG,UAAL,CAAgB+D,MAAhB,CAAuB/J,GAAvB;;AACA,UAAG,KAAKqC,aAAR,EAAuB;AACnBrC,QAAAA,GAAG,CAACgK,IAAJ;;AACA,aAAK3H,aAAL,CAAmB0H,MAAnB,CAA0B/J,GAA1B;;AACAA,QAAAA,GAAG,CAACiK,OAAJ;AACH;AACJ;;;;iCA76BeC,W;;AA+6BpB3H,MAAM,CAACC,MAAP,CAAc/C,KAAK,CAAC0K,SAApB,EAA+BC,wBAA/B;AACA7H,MAAM,CAACC,MAAP,CAAc/C,KAAK,CAAC0K,SAApB,EAA+BE,sBAA/B;AACA9H,MAAM,CAACC,MAAP,CAAc/C,KAAK,CAAC0K,SAApB,EAA+BG,uBAA/B;eAEe7K,K","sourcesContent":["import { createCanvas } from '../utils/canvas';\nimport { bounding_box } from '../utils/functions';\nimport StackMixin from '../instance/stackMixin';\nimport InstanceStack from '../instance/stack';\nimport LayoutMixin from '../instance/layoutMixin';\nimport MessageMixin from '../instance/messageMixin';\nimport { setUniqueId, getUniqueId } from '../utils/functions';\nimport JFlowEvent from '../events';\nimport EventAdapter from '../events/adapter';\n/**\n * @typedef JFlow~JFlowConfigs\n * @type {object}\n * @property {Boolean} allowDrop      - 是否允许 dragdrop\n * @property {Number} maxZoom         - 最大缩放\n * @property {Number} minZoom         - 最小缩放\n * @property {number} initialZoom     - 初始缩放比\n * @property {EventAdapter~pluginDef} eventAdapter\n */\n\n/**\n * @typedef {JFlow~JFlowConfigs | LayoutMixin~LayoutConfigs} JFlow~JFlowLayoutConfigs\n */\n/** \n * JFlow 对象\n * JFlow 是 canvas 上面封装的一个顶层对象，具有处理事件和绘制的功能\n * @constructor JFlow\n * @param {JFlow~JFlowLayoutConfigs} configs - 配置项\n * @mixes LayoutMixin\n * @mixes StackMixin\n * @mixes MessageMixin\n */\nclass JFlow extends EventTarget{\n    constructor(configs) {\n        super();\n        this.uniqueName = 'jflow';\n        /**\n         * @member {EventAdapter} eventAdapter    - eventAdapter 对象\n         **/\n        this.eventAdapter = new EventAdapter(configs.eventAdapter);\n        this.initStack(configs);\n        this.initLayout(configs);\n        /**\n         * @member {Context2d} ctx        - Context2d 对象\n         * @member {Element} canvas       - canvas 元素\n         * @member {number} dpr           - 设备DPR\n         * @member {number} padding       - 内边距\n         */\n        this.ctx = null;\n        this.canvas = null;\n        this.dpr = 1;\n        this.padding = 20;\n        /**\n         * for zoom and pinch\n         * @member {Context2d} position       - 平移位置\n         * @member {Element} scale            - 当前缩放比\n         * @member {number} maxZoom           - 最大缩放比\n         * @member {number} minZoom           - 最小缩放比\n         */\n        this.position = null;\n\t\tthis.scale = null;\n        this.initialZoom = configs.initialZoom;\n        this.maxZoom = configs.maxZoom || 3;\n        this.minZoom = configs.minZoom || .5;\n\t\t// this.initScale = 1;\n\t\t// this.initPosition = null\n\t\tthis.offeset = null;\n        this._lastState = {\n            x: null,\n            y: null,\n            dragging: false,\n            processing: false\n        };\n        this._lastDragState = {\n            target: null,\n            targetLink: null,\n            processing: false,\n        }\n\n        this._target = {\n            instance: null,\n            link: null,\n            moving: null,\n            isInstanceDirty: false, \n            isLinkDirty: false, \n            // isMovingDirty: false, \n            cache: {\n                stack: null,\n                belongs: null,\n                point: null,\n            },\n            meta: {\n                x: undefined,\n                y: undefined,\n                initialX: undefined,\n                initialY: undefined, \n            },\n            status: {\n                dragovering: false,\n                dragging: false,\n                processing: false,\n            }\n        }\n\n        this._focus = {\n            instance: null,\n        }\n\n        this._dragOverTarget = null;\n        // this.lock = configs.lock;\n\n        // this._belongs = \n        this.allowDrop = configs.allowDrop;\n        this._tempInstance = null;\n    }\n    /**\n     * 设置当前拖动的 JFlow 对象\n     * @param {Instance} instance - JFlow 对象\n     */\n    setTempDraggingInstance(instance) {\n        instance._belongs = this;\n        this._tempInstance = instance;\n        Object.assign(this._target, {\n            moving: [this._tempInstance],\n            dragging: true,\n        })\n    }\n\n    /**\n     * 取消当前拖动的 JFlow 对象\n     * @return {number[]} point - JFlow 坐标\n     */\n    removeTempDraggingInstance() {\n        if(this._tempInstance) {\n            // this.removeFromStack(this._tempInstance);\n            const anchor = this._tempInstance.anchor;\n            this._tempInstance = null;\n            return anchor;\n        }\n    }\n    /**\n     * 在 Document 元素上初始化实例\n     * @param {Element} dom \n     */\n    $mount(dom) {\n        const { \n            canvas, \n            ctx, \n            scale: dpr, \n            width: c_width, \n            height: c_height, \n            raw_width,\n            raw_height,\n            left, top \n        } = createCanvas(dom);\n        this.reflow();\n        this.ctx = ctx;\n        this.DOMwrapper = dom;\n        this.canvas = canvas;\n        this.canvasMeta = {\n            width: raw_width,\n            height: raw_height,\n            actual_width: c_width,\n            actual_height: c_height\n        }\n        this.dpr = dpr;\n        this._createEventHandler();\n        this._getBoundingGroupRect();\n\n        const padding = this.padding;\n        const { width: p_width, height: p_height, x, y } = this.bounding_box;\n        const contentBox = {\n            x: padding,\n            y: padding,\n            width: c_width - padding * 2,\n            height: c_height - padding * 2,\n        }\n        const position = { x: 0, y: 0, offsetX: 0, offsetY: 0 };\n        const w_ratio = contentBox.width / p_width;\n        const h_ratio = contentBox.height / p_height;\n        const align = w_ratio <= h_ratio ? 'x' : 'y';\n        let scaleRatio;\n        if(this.initialZoom) {\n            scaleRatio = this.initialZoom;\n        } else {\n            scaleRatio = Math.min(w_ratio, h_ratio);\n        }\n       \n        this.scale = scaleRatio;\n        if(scaleRatio > this.maxZoom) {\n            this.maxZoom = scaleRatio;\n        }\n        if(scaleRatio < this.minZoom) {\n            this.minZoom = scaleRatio;\n        }\n\n        position.x = align === 'x' ? contentBox.x : (contentBox.width - p_width * scaleRatio) / 2 + padding\n        position.y = align === 'y' ? contentBox.y : (contentBox.height - p_height * scaleRatio) / 2 + padding\n        position.offsetX = position.x - x * scaleRatio;\n        position.offsetY = position.y - y * scaleRatio;\n        this.position = position;\n        this._render();\n    }\n    \n    _getBoundingGroupRect() {\n        const points = this._stack.getBoundingRectPoints();\n        if(this.bounding_box) {\n            this.bounding_box = bounding_box(points);\n            const {\n                x: nowx,\n                y: nowy,\n            } = this.bounding_box;\n            const scale = this.scale;\n            this.position.x = this.position.offsetX + nowx * scale;\n            this.position.y = this.position.offsetY + nowy * scale;\n        } else {\n            this.bounding_box = bounding_box(points);\n        }\n    }\n\n    _createEventHandler() { \n        const canvas = this.canvas;\n        let destroyListener;\n        this.eventAdapter.apply(this);\n        const destroyPlainEventListener = () => {\n            this.eventAdapter.unload(this);\n        }\n        destroyListener = destroyPlainEventListener;\n\n        if(this.allowDrop) {\n            const dragoverHandler = this._onDragover.bind(this);\n            const dropHandler = this._onDrop.bind(this);\n            canvas.addEventListener('dragover', dragoverHandler);\n            canvas.addEventListener('drop', dropHandler);\n            destroyListener = () => {\n                destroyPlainEventListener();\n                canvas.removeEventListener('dragover', dragoverHandler);\n                canvas.removeEventListener('drop', dropHandler);\n            }\n        } \n        this.destroy = destroyListener;\n    }\n\n    _targetLockOn(offsetPoint, event) {\n        let point = this._calculatePointBack(offsetPoint);\n        const topLayerPoint = point;\n        this._currentp = point;\n        let stack = this._stack;\n        const target = stack.checkHit(point, (instance) => {\n            return this._target.status.dragging && (instance === this._getMovingTarget())\n        });\n        let linkStack = this._linkStack;\n        let belongs = this;\n        if(target) {\n            linkStack = target._belongs._linkStack;\n            point = target._belongs._currentp;\n            stack = target._belongs._stack;\n            belongs = target._belongs\n        }\n        const targetLink = linkStack.checkHit(point, (link) => {\n            if(!this._target.status.dragging) {\n                return false;\n            }\n            const movingtarget = this._getMovingTarget();\n            return link.from === movingtarget || link.to === movingtarget;\n        });\n\n        Object.assign(this._target, {\n            instance: target,\n            link: targetLink, \n            isInstanceDirty: target === this._target.instance,\n            isLinkDirty: targetLink === this._target.link,\n        });\n        Object.assign(this._target.cache, {\n            stack,\n            belongs,\n            point,\n            topLayerPoint,\n        })\n        Object.assign(this._target.meta, {\n            x: offsetPoint[0],\n            y: offsetPoint[1],\n        });\n\n        if(event === 'pressStart' && !this._target.status.dragging && !this._target.status.dragovering) {\n            let movingtarget = target;\n            while (movingtarget && movingtarget._belongs.lock && movingtarget !== this) {\n                movingtarget = movingtarget._belongs;\n            }\n            // if(movingtarget === this) {\n            //     movingtarget = undefined;\n            // }\n            if(movingtarget) {\n                if(movingtarget._layoutNode) {\n                    if(movingtarget._layoutNode.isLocked) {\n                        movingtarget = movingtarget._layoutNode.getNodes()\n                    } else if(!movingtarget._layoutNode.isDraggable) {\n                        movingtarget = undefined;\n                    } else {\n                        movingtarget = [movingtarget];\n                    }\n                } else {\n                    movingtarget = [movingtarget];\n                }\n            } \n            Object.assign(this._target, {\n                moving: movingtarget,\n                // isMovingDirty: movingtarget[0] === this._target.moving[0],\n            })\n        }\n        return this._target;\n    }\n\n    _getMovingTarget() {\n        return this._target.moving && this._target.moving[0];\n    }\n\n    _processDragOver(instance, event) {\n        if(this._dragOverTarget !== instance) {\n            const target = this.readMessage()?.instance;\n            this._dragCurrentData = target;\n            if(this._dragOverTarget) {\n                const oldIns = this._dragOverTarget;\n                /**\n                * dragleave 退出事件\n                * @event Instance#dragleave\n                * @type {object}\n                * @property {Event} event           - 原始事件 \n                * @property {Object} instance       - dragleave的对象 \n                * @property {target} target         - drag 携带的对象（特指从外面拖进canvas的对象） \n                */\n                oldIns.dispatchEvent(new JFlowEvent('dragleave', {\n                    event,\n                    instance: oldIns,\n                    target\n                }));\n            }\n            if(instance) {\n                /**\n                * dragenter 进入事件\n                * @event Instance#dragenter\n                * @type {object}\n                * @property {Event} event           - 原始事件 \n                * @property {Object} instance       - dragenter的对象 \n                * @property {target} target         - drag 携带的对象（特指从外面拖进canvas的对象） \n                */\n                instance.dispatchEvent(new JFlowEvent('dragenter', {\n                    event,\n                    instance,\n                    target,\n                }));\n            }\n            this._dragOverTarget = instance;\n        } else if(this._dragOverTarget){\n            /**\n            * dragover 进入事件\n            * @event Instance#dragover\n            * @type {object}\n            * @property {Event} event           - 原始事件 \n            * @property {Object} instance       - dragover的对象 \n            * @property {target} target         - drag 携带的对象（特指从外面拖进canvas的对象） \n            */\n            this._dragOverTarget.dispatchEvent(new JFlowEvent('dragover', {\n                event,\n                instance,\n                target: this._dragCurrentData,\n            }));\n        }\n    }\n\n    _onDragover(event) {\n        // console.log(event);\n        event.preventDefault();\n        event.stopPropagation();\n        if(this._lastDragState.processing) return;\n        this._lastDragState.processing = true;\n        const { offsetX, offsetY } = event\n        Object.assign(this._target.status, {\n            dragovering: true,\n        })\n        this._targetLockOn([offsetX, offsetY])\n        const instance = this._target.instance || this._target.link;\n        this._processDragOver(instance, event);\n        if(this._target.isLinkDirty || this._target.isInstanceDirty) {\n            Promise.resolve().then(() => {\n                this._render();    \n                this._target.isLinkDirty = false; \n                this._target.isInstanceDirty = false;\n                this._lastDragState.processing = false;\n            })\n        } else {\n            this._lastDragState.processing = false;\n        } \n    }\n\n    _onDrop(event) {\n        const { offsetX, offsetY, clientX, clientY } = event\n        const payload = this.consumeMessage();\n        const instance = payload.instance;\n        if(this._dragOverTarget) {\n            const oldIns = this._dragOverTarget;\n            oldIns.dispatchEvent(new JFlowEvent('dragoverend', {\n                event,\n                instance: oldIns,\n            }));\n            this._dragOverTarget = null;\n        }\n        const {\n            link,\n            instance: target,\n        } = this._target;\n        const {\n            point, belongs\n        } = this._target.cache;\n        if(link) {   \n            /**\n             * 丢在线上事件\n             *\n             * @event BaseLink#drop\n             * @type {object}\n             * @property {Event} event           - 原始事件 \n             * @property {Object} instance       - 拖动的对象 \n             * @property {BaseLink} link         - 目标连线 \n             * @property {JFlow} jflow           - 当前JFlow对象 \n             * @property {Group|JFlow} belongs   - 连线所在的绘图栈的对象\n             * @property {number[]} point        - 已经计算到绘图栈对应坐标系下的坐标\n             */\n            instance.anchor = point;\n            link.dispatchEvent(new JFlowEvent('drop', {\n                event,\n                instance,\n                link,\n                jflow: this,\n                belongs,\n                point\n            }))\n        } else if(target) {\n            /**\n             * 丢在节点上事件\n             *\n             * @event Node#drop\n             * @type {object}\n             * @property {Event} event           - 原始事件 \n             * @property {Object} instance       - 拖动的对象 \n             * @property {JFlow} jflow           - 当前JFlow对象 \n             * @property {Node} target           - 目标节点\n             * @property {number[]} point        - 已经计算到绘图栈对应坐标系下的坐标\n             */\n            target.dispatchEvent(new JFlowEvent('drop', {\n                event,\n                instance,\n                jflow: this,\n                target,\n                point\n            }));\n        } else {\n            /**\n            * 丢在主图上事件\n            *\n            * @event JFlow#drop\n            * @type {object}\n            * @property {Event} event           - 原始事件 \n            * @property {Object} instance       - 拖动的对象 \n            * @property {JFlow} jflow           - 当前JFlow对象 \n            * @property {number[]} point        - 已经计算到绘图栈对应坐标系下的坐标\n            */\n            this.dispatchEvent(new JFlowEvent('drop', {\n                event,\n                instance,\n                jflow: this,\n                target,\n                point,\n            }))\n        }\n        \n        requestAnimationFrame(() => {\n            this._target.instance = null;\n            this._target.link = null;\n            Object.assign(this._target.status, {\n               dragovering: false,\n            })\n        })\n    }\n    \n    /**\n     * 缩放操作处理函数\n     * @param {Number} offsetX - 事件对象与canvas的内填充边（padding edge）在 X 轴方向上的偏移量。\n     * @param {Number} offsetY - 事件对象与canvas的内填充边（padding edge）在 Y 轴方向上的偏移量。 \n     * @param {Number} deltaX  - 水平滚动量\n     * @param {Number} deltaY  - 垂直滚动量\n     * @param {Number} event - 原生事件\n     */\n    zoomHandler(offsetX, offsetY, deltaX, deltaY, event) {\n        if(this._zooming) return;\n        this._zooming = true;\n        const { width: p_width, height: p_height, x, y } = this.bounding_box;\n        let newScale = this.scale;\n        const amount = deltaY > 0 ? 1.1 : 1 / 1.1;\n        newScale *= amount;\n\n        if (this.maxZoom && newScale > this.maxZoom){\n            // could just return but then won't stop exactly at maxZoom\n            newScale = this.maxZoom;\n        }\n\n        if(this.minZoom && newScale < this.minZoom) {\n            newScale = this.minZoom;\n        }\n\n        var deltaScale    = newScale - this.scale;\n        var currentWidth  = p_width * this.scale;\n        var currentHeight = p_height * this.scale;\n        var deltaWidth    = p_width * deltaScale;\n        var deltaHeight   = p_height * deltaScale;\n\n        var tX = offsetX - this.position.x;\n        var tY = offsetY - this.position.y;\n        var pX = -tX / currentWidth;\n        var pY = -tY / currentHeight;\n\n        this.scale = newScale;\n        this.position.x += pX * deltaWidth;\n        this.position.y += pY * deltaHeight;\n        this.position.offsetX = this.position.x - x * newScale;\n        this.position.offsetY = this.position.y - y * newScale;\n        this.dispatchEvent(new JFlowEvent('zoompan'));\n        requestAnimationFrame(() => {\n            this._render();\n            this._zooming = false;\n        })\n    }\n    /**\n     * 平移画布操作处理函数\n     * @param {Number} deltaX  - 水平滚动量\n     * @param {Number} deltaY  - 垂直滚动量\n     * @param {Number} event - 原生事件\n     */\n    panHandler(deltaX, deltaY, event) {\n        if(this._panning) return;\n        this._panning = true;\n        this._recalculatePosition(deltaX, deltaY);\n        /**\n         * 缩放平移事件\n         *\n         * @event JFlow#zoompan\n        */\n        this.dispatchEvent(new JFlowEvent('zoompan'));\n        requestAnimationFrame(() => {\n            this._render();\n            this._panning = false;\n        })\n    }\n    /**\n     * 开始按压处理函数\n     * @param {Number} offsetX - 事件对象与canvas的内填充边（padding edge）在 X 轴方向上的偏移量。\n     * @param {Number} offsetY - 事件对象与canvas的内填充边（padding edge）在 Y 轴方向上的偏移量。 \n     * @param {Number} event - 原生事件\n     */\n    pressStartHandler(offsetX, offsetY, event) {\n        this._targetLockOn([offsetX, offsetY], 'pressStart');\n        Object.assign(this._target.meta, {\n            initialX: offsetX,\n            initialY: offsetY,\n        })\n        Object.assign(this._target.status, {\n            dragging: true,\n            processing: false,\n        });\n        if(this._target.moving) {\n            const moving = this._getMovingTarget();\n            /**\n             * 开始拖动组的事件（特指lock的顶层组）\n             *\n             * @event Node#pressStart\n             * @type {object}\n             * @property {Event} event           - 原始事件 \n             * @property {Node} instance       - 拖动的对象 \n             * @property {JFlow} jflow           - 当前JFlow对象 \n             */\n            moving.dispatchEvent(new JFlowEvent('pressStart', {\n                event,\n                instance: moving,\n                jflow: this,\n            }))\n        }\n\n        if(this._target.instance) {\n            /**\n             * 开始拖动对象事件（就是目标对象的拖动事件，事件支持冒泡）\n             *\n             * @event Node#instancePressStart\n             * @type {object}\n             * @property {Event} event           - 原始事件 \n             * @property {Node} instance     - 拖动的对象 \n             * @property {JFlow} jflow           - 当前JFlow对象 \n             * @property {Boolean} bubbles       - 冒泡\n             */\n            const t = this._target.instance;\n            t.bubbleEvent(new JFlowEvent('instancePressStart', {\n                event,\n                target: t,\n                jflow: this,\n                bubbles: true,\n            }))\n        }\n    }\n    /**\n     * 按压中处理函数\n     * @param {Number} offsetX - 事件对象与canvas的内填充边（padding edge）在 X 轴方向上的偏移量。\n     * @param {Number} offsetY - 事件对象与canvas的内填充边（padding edge）在 Y 轴方向上的偏移量。 \n     * @param {Number} event - 原生事件\n     */\n    pressMoveHandler(offsetX, offsetY, event) {\n        const {\n            dragging, processing\n        } = this._target.status;\n        const { x, y } = this._target.meta;\n        this.canvas.style.cursor = 'default';\n        if(!dragging && !processing) {\n            const {\n                link,\n                instance\n            } = this._targetLockOn([offsetX, offsetY]);\n            if(instance) {\n                /**\n                * instance mousemove 原生事件\n                *\n                * @event JFlow#instancemousemove\n                * @type {object}\n                * @property {Event} event           - 原始事件\n                * @property {Node} instance           - 原始事件\n                * @property {JFlow} jflow           - 当前JFlow对象 \n                */\n                instance.dispatchEvent(new JFlowEvent('instancemousemove', {\n                    event,\n                    instance,\n                    jflow: this,\n                }))\n            }\n        }\n        /**\n         * canvas mousemove 原生事件\n         *\n         * @event JFlow#canvasmousemove\n         * @type {object}\n         * @property {Event} event           - 原始事件\n         * @property {JFlow} jflow           - 当前JFlow对象 \n         */\n        this.dispatchEvent(new JFlowEvent('canvasmousemove', {\n            event,\n            jflow: this,\n        }))\n        \n        if(!dragging) return;\n        this.canvas.style.cursor = 'grabbing';\n        if(processing) return;\n        \n        const movingtarget = this._target.moving;// this._tempInstance ? [this._tempInstance] : this._target.moving;\n\n        this._target.status.processing = true;\n        const deltaX = offsetX - x;\n        const deltaY = offsetY - y;\n\n        if(movingtarget) {\n            movingtarget.forEach(t => {\n                t.anchor[0] += deltaX / this.scale;\n                t.anchor[1] += deltaY / this.scale;\n            })\n        } else {\n            this._recalculatePosition(deltaX, deltaY);    \n            this.dispatchEvent(new JFlowEvent('zoompan'));\n        }\n        const { instance, link } = this._targetLockOn([offsetX, offsetY]);\n        this._processDragOver(instance || link, event);\n            \n        requestAnimationFrame(() => {\n            this._render();\n            this._target.isLinkDirty = false; \n            this._target.isInstanceDirty = false;\n            this._target.status.processing = false;\n        })\n    }\n    /**\n     * 按压结束处理函数\n     * @param {Boolean} isDocument - 是否为 document 触发\n     * @param {Number} event - 原生事件\n     */\n    pressUpHanlder(isDocument, event) {\n        const meta = this._target.meta;\n        if(meta.initialX === meta.x\n            && meta.initialY === meta.y) {\n                if(event.target !== this.canvas){\n                    this._clearTarget();\n                    return;\n                }\n                if(this._target.instance && !isDocument) {\n                    const t = this._target.instance;\n                    /**\n                    * 点击事件（冒泡）\n                    *\n                    * @event Node#click\n                    * @type {object}\n                    * @property {Event} event          - 原始事件 \n                    * @property {Instance} target      - 点击的对象 \n                    * @property {JFlow} jflow          - 当前JFlow对象 \n                    * @property {Boolean} bubbles      - 冒泡\n                    */\n                    t.bubbleEvent(new JFlowEvent('click', {\n                        event,\n                        target: t,\n                        jflow: this,\n                        bubbles: true,\n                    }))\n                    this._clearTarget();\n                    this._render();\n                    return;\n                } else {\n                    /**\n                    * 点击事件\n                    *\n                    * @event JFlow#click\n                    * @type {object}\n                    * @property {Event} event          - 原始事件 \n                    * @property {JFlow} jflow          - 当前JFlow对象 \n                    */\n                    this.dispatchEvent(new JFlowEvent('click', {\n                        event,\n                        jflow: this,\n                    }));\n                    this._clearTarget();\n                    this._render();\n                    return\n                }\n            \n        } else if(this._target.moving) {\n            let checkresult = false;\n            if(this._layout.static) {\n                checkresult = this.staticCheck(this._getMovingTarget());\n            }\n\n            if(!checkresult && this._target.link) {\n                const {\n                    point, belongs\n                } = this._target.cache;\n                const link = this._target.link;\n                const instance = this._getMovingTarget();\n                /**\n                 * 拖动到线上事件\n                 *\n                 * @event BaseLink#drop\n                 * @type {object}\n                 * @property {Event} event           - 原始事件 \n                 * @property {Object} instance     - 拖动的对象 \n                 * @property {BaseLink} link         - 目标连线 \n                 * @property {JFlow} jflow           - 当前JFlow对象 \n                 * @property {Group|JFlow} belongs   - 连线所在的绘图栈的对象\n                 */\n                link.dispatchEvent(new JFlowEvent('drop', {\n                    event,\n                    instance,\n                    link,\n                    jflow: this,\n                    belongs,\n                }));\n                this._target.link = null;\n                this._target.instance = null;\n            }\n            if(this._target.moving) {\n                if(this._target.instance) {\n                    /**\n                     * 拖动后放置到 Instance 上的事件\n                     *\n                     * @event Instance#pressEnd\n                     * @type {object}\n                     * @property {Event} event           - 原始事件 \n                     * @property {Instance} instance     - 拖动的对象 \n                     * @property {JFlow} jflow           - 当前JFlow对象 \n                     * @property {Instance} target       - 拖动到的对象\n                     * @property {boolean} bubbles       - 冒泡\n                     */\n                     console.log('pressEnd', this._target.instance)\n                    this._target.instance.bubbleEvent(new JFlowEvent('pressEnd', {\n                        event,\n                        instance: this._getMovingTarget(),\n                        jflow: this,\n                        target: this._target.instance,\n                        bubbles: true\n                    }));\n                } else {\n                    /**\n                     * 拖动后放置到主图上的事件\n                     *\n                     * @event JFlow#pressEnd\n                     * @type {object}\n                     * @property {Event} event           - 原始事件 \n                     * @property {Instance} instance       - 拖动的对象 \n                     * @property {JFlow} jflow           - 当前JFlow对象 \n                     */\n                    this.dispatchEvent(new JFlowEvent('pressEnd', {\n                        event,\n                        instance: this._getMovingTarget(),\n                        jflow: this,\n                    }))\n                }\n            }\n            this._target.moving = null;\n            this.removeTempDraggingInstance()\n            // this._target.isMovingDirty = false;\n            this._render();\n        }\n        this._clearTarget();\n    }\n    /**\n     * 菜单弹出处理函数\n     * @param {Number} offsetX - 事件对象与canvas的内填充边（padding edge）在 X 轴方向上的偏移量。\n     * @param {Number} offsetY - 事件对象与canvas的内填充边（padding edge）在 Y 轴方向上的偏移量。 \n     * @param {Number} event - 原生事件\n     */\n    contextMenuHanlder(offsetX, offsetY, event) {\n        const {\n            link,\n            instance\n        } = this._targetLockOn([offsetX, offsetY]);\n        const { topLayerPoint } = this._target.cache\n        if(instance || link) {\n            const target = (instance || link);\n            /**\n             * 右键事件（冒泡）\n             *\n             * @event instance#contextclick\n             * @type {object}\n             * @property {Event} event           - 原始事件 \n             * @property {Instance} target       - 右键对象 \n             * @property {JFlow} jflow           - 当前JFlow对象\n             * @property {number[]} topLayerPoint  - jflow坐标系上的位置\n             * @property {Boolean} bubbles       - 冒泡\n             */\n            target.bubbleEvent(new JFlowEvent('contextclick', {\n                event,\n                jflow: this,\n                target,\n                topLayerPoint,\n                bubbles: true\n            }));\n        } else {\n            /**\n             * 右键事件\n             *\n             * @event JFlow#contextclick\n             * @type {object}\n             * @property {Event} event           - 原始事件 \n             * @property {JFlow} jflow           - 当前JFlow对象\n             * @property {number[]} topLayerPoint  - jflow坐标系上的位置\n             */\n            this.dispatchEvent(new JFlowEvent('contextclick', {\n                event,\n                jflow: this,\n                topLayerPoint,\n            }));\n        }\n    }\n\n    /*_onZoom(event) {\n        event.preventDefault();\n        let { offsetX, offsetY, deltaX, deltaY } = event\n        if(event.ctrlKey) { \n            deltaY = -deltaY;\n            this.zoomHandler(offsetX, offsetY, deltaX, deltaY);\n        } else {\n            this.panHandler(-deltaX, -deltaY);\n        }\n    }\n\n    _onPressStart(event) { \n        const { offsetX, offsetY, deltaY, button } = event\n        if(button !== 0) return;\n        this.pressStartHandler(offsetX, offsetY);\n    }\n\n    _onPressMove(event) {\n        const { offsetX, offsetY } = event\n        this.pressMoveHandler(offsetX, offsetY);\n    }\n\n    _onPressUp(event, isDocument) {\n        event.preventDefault();\n        event.stopPropagation();\n        const { button } = event\n        if(button !== 0) return;\n        this.pressUpHanlder(isDocument)\n    }\n\n    _onPressUpDocument(event) {\n        this._onPressUp(event, true);\n    }\n\n    _onContextMenu(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        const { offsetX, offsetY } = event;\n        this.contextMenuHanlder(offsetX, offsetY);\n    }*/\n\n    _clearTarget(){\n        Object.assign(this._target.meta, {\n            x: undefined,\n            y: undefined,\n            initialX: undefined,\n            initialY: undefined, \n        })\n        Object.assign(this._target.status, {\n            dragging: false,\n            processing: false,\n        });\n        Object.assign(this._target, {\n            instance: null,\n            link: null,\n            moving: null,\n        });\n    }\n\n    _recalculatePosition(deltaX, deltaY, scale) {\n        const { x, y } = this.bounding_box;\n        if(scale === undefined) {\n            scale = this.scale;\n        }\n        this.position.x += deltaX;\n\t\tthis.position.y += deltaY;\n        this.position.offsetX = this.position.x - x * scale;\n        this.position.offsetY = this.position.y - y * scale;\n    }\n\n    calculateToRealWorld(p) {\n        const scale = this.scale;\n        const position = this.position;\n        return [p[0] * scale + position.offsetX, p[1] * scale + position.offsetY]\n    }\n\n    _calculatePointBack(p) {\n        const scale = this.scale;\n        const position = this.position;\n        return [(p[0] - position.offsetX)/scale, (p[1] - position.offsetY) / scale];\n    }\n\n    _calculateDistance(l) {\n        const scale = this.scale;\n        return scale * l;\n    }\n\n    _resetTransform() {\n        const { width: c_width, height: c_height } = this.canvasMeta;\n        const position = this.position;\n        const scale = this.scale;\n        const ctx = this.ctx;\n        ctx.setTransform();\n        ctx.clearRect(0, 0, c_width, c_height);\n        ctx.scale(this.dpr, this.dpr);\n        ctx.transform(scale, 0, 0, scale, position.offsetX, position.offsetY);\n    }\n     /**\n     * 绘制画布\n     */\n    _render() {\n        this._resetTransform();\n        const ctx = this.ctx;\n        \n        this._stack.render(ctx);\n        this._linkStack.render(ctx);\n        if(this._tempInstance) {\n            ctx.save();\n            this._tempInstance.render(ctx)\n            ctx.restore();\n        }\n    }\n}\nObject.assign(JFlow.prototype, MessageMixin);\nObject.assign(JFlow.prototype, StackMixin);\nObject.assign(JFlow.prototype, LayoutMixin);\n\nexport default JFlow;\nexport { default as JFlowEvent } from '../events';\nexport { default as commonEventAdapter } from '../events/commonAdapter';\nexport { default as Instance } from '../instance/instance';\nexport { default as Node } from '../instance/node';\nexport { default as BaseLink } from '../instance/base-link';\nexport { default as Point } from '../instance/shapes/point';\nexport { default as Rectangle } from '../instance/shapes/rectangle';\nexport { default as Group } from '../instance/shapes/rectangle-group';\nexport { default as Capsule } from '../instance/shapes/capsule';\nexport { default as CapsuleGroup } from '../instance/shapes/capsule-group';\nexport { default as CapsuleVerticalGroup } from '../instance/shapes/capsule-vertical-group';\nexport { default as Diamond } from '../instance/shapes/diamond';\nexport { default as DiamondGroup } from '../instance/shapes/diamond-group';\nexport { default as DiamondVerticalGroup } from '../instance/shapes/diamond-vertical-group';\nexport { default as Rhombus } from '../instance/shapes/rhombus';\nexport { default as RhombusGroup } from '../instance/shapes/rhombus-group';\nexport { default as Text } from '../instance/text';\nexport { default as Icon } from '../instance/image';\nexport { default as Link } from '../instance/link';\nexport { default as PolyLink } from '../instance/poly-link';\nexport { default as BezierLink } from '../instance/bezier-link';\nexport { default as LinearLayout} from '../layout/linear-layout';\n// export { default as TreeLayout } from '../ler-layouta;yout/tree-layout';\nexport { default as Lowcodelayout } from '../layout/low-code-layout';\nexport { default as ERLayout } from '../layout/er-layout/er-layout';\n"],"file":"index.js"}